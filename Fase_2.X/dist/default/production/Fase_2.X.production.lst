

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun May 14 16:11:21 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Generated 09/02/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4321 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     
    58                           	psect	idataBANK0
    59   0002F6                     __pidataBANK0:
    60                           	callstack 0
    61                           
    62                           ;initializer for _teclas
    63   0002F6  31                 	db	49
    64   0002F7  31                 	db	49
    65   0002F8  31                 	db	49
    66   0002F9  31                 	db	49
    67   0002FA  2D                 	db	45
    68   0002FB  41                 	db	65
    69   0002FC  42                 	db	66
    70   0002FD  43                 	db	67
    71   0002FE  32                 	db	50
    72   0002FF  2D                 	db	45
    73   000300  44                 	db	68
    74   000301  45                 	db	69
    75   000302  46                 	db	70
    76   000303  33                 	db	51
    77   000304  2D                 	db	45
    78   000305  47                 	db	71
    79   000306  48                 	db	72
    80   000307  49                 	db	73
    81   000308  34                 	db	52
    82   000309  2D                 	db	45
    83   00030A  4A                 	db	74
    84   00030B  4B                 	db	75
    85   00030C  4C                 	db	76
    86   00030D  35                 	db	53
    87   00030E  2D                 	db	45
    88   00030F  4D                 	db	77
    89   000310  4E                 	db	78
    90   000311  4F                 	db	79
    91   000312  36                 	db	54
    92   000313  2D                 	db	45
    93   000314  50                 	db	80
    94   000315  51                 	db	81
    95   000316  52                 	db	82
    96   000317  53                 	db	83
    97   000318  37                 	db	55
    98   000319  54                 	db	84
    99   00031A  55                 	db	85
   100   00031B  56                 	db	86
   101   00031C  38                 	db	56
   102   00031D  2D                 	db	45
   103   00031E  57                 	db	87
   104   00031F  58                 	db	88
   105   000320  59                 	db	89
   106   000321  5A                 	db	90
   107   000322  39                 	db	57
   108                           
   109                           	psect	smallconst
   110   000200                     __psmallconst:
   111                           	callstack 0
   112   000200  00                 	db	0
   113   000201                     _zeros:
   114                           	callstack 0
   115   000201  30                 	db	48
   116   000202  20                 	db	32
   117   000203                     __end_of_zeros:
   118                           	callstack 0
   119   000000                     _LATAbits	set	3977
   120   000000                     _INTCON	set	4082
   121   000000                     _PORTB	set	3969
   122   000000                     _LATA	set	3977
   123   000000                     _TRISA	set	3986
   124   000000                     _INTCONbits	set	4082
   125   000000                     _TRISC	set	3988
   126   000000                     _TRISB	set	3987
   127   000000                     _ADCON2	set	4032
   128   000000                     _ADCON1	set	4033
   129   000000                     _ADCON0bits	set	4034
   130   000000                     _ADRESH	set	4036
   131   000000                     _RCONbits	set	4048
   132   000000                     _T0CONbits	set	4053
   133   000000                     _TMR0L	set	4054
   134   000000                     _TMR0H	set	4055
   135   000000                     _INTCON3	set	4080
   136   000000                     _INTCON2bits	set	4081
   137   000000                     _LATCbits	set	3979
   138   000203  00                 	db	0	; dummy byte at the end
   139   000000                     
   140                           ; #config settings
   141                           
   142                           	psect	cinit
   143   0002BA                     __pcinit:
   144                           	callstack 0
   145   0002BA                     start_initialization:
   146                           	callstack 0
   147   0002BA                     __initialization:
   148                           	callstack 0
   149                           
   150                           ; Initialize objects allocated to BANK0 (45 bytes)
   151                           ; load TBLPTR registers with __pidataBANK0
   152   0002BA  0EF6               	movlw	low __pidataBANK0
   153   0002BC  6EF6               	movwf	tblptrl,c
   154   0002BE  0E02               	movlw	high __pidataBANK0
   155   0002C0  6EF7               	movwf	tblptrh,c
   156   0002C2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   157   0002C4  6EF8               	movwf	tblptru,c
   158   0002C6  EE00  F080         	lfsr	0,__pdataBANK0
   159   0002CA  EE10 F02D          	lfsr	1,45
   160   0002CE                     copy_data0:
   161   0002CE  0009               	tblrd		*+
   162   0002D0  CFF5 FFEE          	movff	tablat,postinc0
   163   0002D4  50E5               	movf	postdec1,w,c
   164   0002D6  50E1               	movf	fsr1l,w,c
   165   0002D8  E1FA               	bnz	copy_data0
   166                           
   167                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   168   0002DA  6A5C               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   169                           
   170                           ; Clear objects allocated to COMRAM (80 bytes)
   171   0002DC  EE00  F001         	lfsr	0,__pbssCOMRAM
   172   0002E0  0E50               	movlw	80
   173   0002E2                     clear_0:
   174   0002E2  6AEE               	clrf	postinc0,c
   175   0002E4  06E8               	decf	wreg,f,c
   176   0002E6  E1FD               	bnz	clear_0
   177   0002E8                     end_of_initialization:
   178                           	callstack 0
   179   0002E8                     __end_of__initialization:
   180                           	callstack 0
   181   0002E8  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   182   0002EA  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   183   0002EC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   184   0002EE  6EF8               	movwf	tblptru,c
   185   0002F0  0100               	movlb	0
   186   0002F2  EFA5  F001         	goto	_main	;jump to C main() function
   187                           
   188                           	psect	bitbssCOMRAM
   189   0002E0                     __pbitbssCOMRAM:
   190                           	callstack 0
   191   0002E0                     _isCentered:
   192                           	callstack 0
   193   0002E0                     	ds	1
   194                           
   195                           	psect	bssCOMRAM
   196   000001                     __pbssCOMRAM:
   197                           	callstack 0
   198   000001                     _s_Timers:
   199                           	callstack 0
   200   000001                     	ds	60
   201   00003D                     _teclaActual:
   202                           	callstack 0
   203   00003D                     	ds	2
   204   00003F                     _tTecla:
   205                           	callstack 0
   206   00003F                     	ds	2
   207   000041                     _counter:
   208                           	callstack 0
   209   000041                     	ds	2
   210   000043                     _h_Tics:
   211                           	callstack 0
   212   000043                     	ds	2
   213   000045                     _tick_count:
   214                           	callstack 0
   215   000045                     	ds	2
   216   000047                     motorTeclado@state:
   217                           	callstack 0
   218   000047                     	ds	1
   219   000048                     _presionada:
   220                           	callstack 0
   221   000048                     	ds	1
   222   000049                     _filas:
   223                           	callstack 0
   224   000049                     	ds	1
   225   00004A                     _teclado:
   226                           	callstack 0
   227   00004A                     	ds	1
   228   00004B                     _teclaPresionada:
   229                           	callstack 0
   230   00004B                     	ds	1
   231   00004C                     motorADCON@state:
   232                           	callstack 0
   233   00004C                     	ds	1
   234   00004D                     _direction:
   235                           	callstack 0
   236   00004D                     	ds	1
   237   00004E                     _JoyPosition:
   238                           	callstack 0
   239   00004E                     	ds	1
   240   00004F                     	ds	1
   241   000050                     	ds	1
   242                           
   243                           	psect	dataBANK0
   244   000080                     __pdataBANK0:
   245                           	callstack 0
   246   000080                     _teclas:
   247                           	callstack 0
   248   000080                     	ds	45
   249                           
   250                           	psect	cstackCOMRAM
   251   000051                     __pcstackCOMRAM:
   252                           	callstack 0
   253   000051                     ?___wmul:
   254                           	callstack 0
   255   000051                     ___wmul@multiplier:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0x0
   259   000051                     	ds	2
   260   000053                     ___wmul@multiplicand:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x2
   264   000053                     	ds	2
   265   000055                     ___wmul@product:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x4
   269   000055                     	ds	2
   270   000057                     
   271                           ; 1 bytes @ 0x6
   272   000057                     	ds	1
   273   000058                     ??_RSI_High:
   274                           
   275                           ; 1 bytes @ 0x7
   276   000058                     	ds	4
   277   00005C                     
   278                           ; 1 bytes @ 0xB
   279 ;;
   280 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   281 ;;
   282 ;; *************** function _main *****************
   283 ;; Defined at:
   284 ;;		line 41 in file "main.c"
   285 ;; Parameters:    Size  Location     Type
   286 ;;		None
   287 ;; Auto vars:     Size  Location     Type
   288 ;;		None
   289 ;; Return value:  Size  Location     Type
   290 ;;                  1    wreg      void 
   291 ;; Registers used:
   292 ;;		cstack
   293 ;; Tracked objects:
   294 ;;		On entry : 0/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMRAM   BANK0   BANK1
   298 ;;      Params:         0       0       0
   299 ;;      Locals:         0       0       0
   300 ;;      Temps:          0       0       0
   301 ;;      Totals:         0       0       0
   302 ;;Total ram usage:        0 bytes
   303 ;; Hardware stack levels required when called: 4
   304 ;; This function calls:
   305 ;;		_initCPU
   306 ;; This function is called by:
   307 ;;		Startup code after reset
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           	psect	text0
   312   00034A                     __ptext0:
   313                           	callstack 0
   314   00034A                     _main:
   315                           	callstack 27
   316   00034A  ECAB  F001         	call	_initCPU	;wreg free
   317   00034E                     l48:
   318   00034E  EFA7  F001         	goto	l48
   319   000352  EF20  F000         	goto	start
   320   000356                     __end_of_main:
   321                           	callstack 0
   322                           
   323 ;; *************** function _initCPU *****************
   324 ;; Defined at:
   325 ;;		line 16 in file "main.c"
   326 ;; Parameters:    Size  Location     Type
   327 ;;		None
   328 ;; Auto vars:     Size  Location     Type
   329 ;;		None
   330 ;; Return value:  Size  Location     Type
   331 ;;                  1    wreg      void 
   332 ;; Registers used:
   333 ;;		None
   334 ;; Tracked objects:
   335 ;;		On entry : 0/0
   336 ;;		On exit  : 0/0
   337 ;;		Unchanged: 0/0
   338 ;; Data sizes:     COMRAM   BANK0   BANK1
   339 ;;      Params:         0       0       0
   340 ;;      Locals:         0       0       0
   341 ;;      Temps:          0       0       0
   342 ;;      Totals:         0       0       0
   343 ;;Total ram usage:        0 bytes
   344 ;; Hardware stack levels used: 1
   345 ;; Hardware stack levels required when called: 3
   346 ;; This function calls:
   347 ;;		Nothing
   348 ;; This function is called by:
   349 ;;		_main
   350 ;; This function uses a non-reentrant model
   351 ;;
   352                           
   353                           	psect	text1
   354   000356                     __ptext1:
   355                           	callstack 0
   356   000356                     _initCPU:
   357                           	callstack 27
   358   000356  0012               	return		;funcret
   359   000358                     __end_of_initCPU:
   360                           	callstack 0
   361                           
   362 ;; *************** function _RSI_High *****************
   363 ;; Defined at:
   364 ;;		line 33 in file "main.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;		None
   367 ;; Auto vars:     Size  Location     Type
   368 ;;		None
   369 ;; Return value:  Size  Location     Type
   370 ;;                  1    wreg      void 
   371 ;; Registers used:
   372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   373 ;; Tracked objects:
   374 ;;		On entry : 0/0
   375 ;;		On exit  : 0/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMRAM   BANK0   BANK1
   378 ;;      Params:         0       0       0
   379 ;;      Locals:         0       0       0
   380 ;;      Temps:          4       0       0
   381 ;;      Totals:         4       0       0
   382 ;;Total ram usage:        4 bytes
   383 ;; Hardware stack levels used: 1
   384 ;; Hardware stack levels required when called: 2
   385 ;; This function calls:
   386 ;;		_RSI_Timer0
   387 ;; This function is called by:
   388 ;;		Interrupt level 2
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392                           	psect	intcode
   393   000008                     __pintcode:
   394                           	callstack 0
   395   000008                     _RSI_High:
   396                           	callstack 27
   397                           
   398                           ;incstack = 0
   399   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   400   00000A  CFD9 F058          	movff	fsr2l,??_RSI_High
   401   00000E  CFDA F059          	movff	fsr2h,??_RSI_High+1
   402   000012  CFF3 F05A          	movff	prodl,??_RSI_High+2
   403   000016  CFF4 F05B          	movff	prodh,??_RSI_High+3
   404   00001A  A4F2               	btfss	242,2,c	;volatile
   405   00001C  EF12  F000         	goto	i2u49_41
   406   000020  EF14  F000         	goto	i2u49_40
   407   000024                     i2u49_41:
   408   000024  EF16  F000         	goto	i2l39
   409   000028                     i2u49_40:
   410   000028  EC02  F001         	call	_RSI_Timer0	;wreg free
   411   00002C                     i2l39:
   412   00002C  C05B  FFF4         	movff	??_RSI_High+3,prodh
   413   000030  C05A  FFF3         	movff	??_RSI_High+2,prodl
   414   000034  C059  FFDA         	movff	??_RSI_High+1,fsr2h
   415   000038  C058  FFD9         	movff	??_RSI_High,fsr2l
   416   00003C  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   417   00003E  0011               	retfie		f
   418   000040                     __end_of_RSI_High:
   419                           	callstack 0
   420                           
   421 ;; *************** function _RSI_Timer0 *****************
   422 ;; Defined at:
   423 ;;		line 44 in file "TITIMER.c"
   424 ;; Parameters:    Size  Location     Type
   425 ;;		None
   426 ;; Auto vars:     Size  Location     Type
   427 ;;		None
   428 ;; Return value:  Size  Location     Type
   429 ;;                  1    wreg      void 
   430 ;; Registers used:
   431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   432 ;; Tracked objects:
   433 ;;		On entry : 0/0
   434 ;;		On exit  : 0/0
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMRAM   BANK0   BANK1
   437 ;;      Params:         0       0       0
   438 ;;      Locals:         0       0       0
   439 ;;      Temps:          1       0       0
   440 ;;      Totals:         1       0       0
   441 ;;Total ram usage:        1 bytes
   442 ;; Hardware stack levels used: 1
   443 ;; Hardware stack levels required when called: 1
   444 ;; This function calls:
   445 ;;		___wmul
   446 ;; This function is called by:
   447 ;;		_RSI_High
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451                           	psect	text3
   452   000204                     __ptext3:
   453                           	callstack 0
   454   000204                     _RSI_Timer0:
   455                           	callstack 27
   456   000204                     
   457                           ;TITIMER.c: 47:     INTCONbits.TMR0IF = 0;
   458   000204  94F2               	bcf	242,2,c	;volatile
   459   000206                     
   460                           ;TITIMER.c: 48:     TMR0H = 0xEF;
   461   000206  0EEF               	movlw	239
   462   000208  6ED7               	movwf	215,c	;volatile
   463                           
   464                           ;TITIMER.c: 49:     TMR0L = 0xBB;
   465   00020A  0EBB               	movlw	187
   466   00020C  6ED6               	movwf	214,c	;volatile
   467   00020E                     
   468                           ;TITIMER.c: 50:  h_Tics++;
   469   00020E  4A43               	infsnz	_h_Tics^0,f,c
   470   000210  2A44               	incf	(_h_Tics+1)^0,f,c
   471   000212                     
   472                           ;TITIMER.c: 52:  if (h_Tics>=30000) {
   473   000212  0E30               	movlw	48
   474   000214  5C43               	subwf	_h_Tics^0,w,c
   475   000216  0E75               	movlw	117
   476   000218  5844               	subwfb	(_h_Tics+1)^0,w,c
   477   00021A  A0D8               	btfss	status,0,c
   478   00021C  EF12  F001         	goto	i2u46_41
   479   000220  EF14  F001         	goto	i2u46_40
   480   000224                     i2u46_41:
   481   000224  EF5C  F001         	goto	i2l75
   482   000228                     i2u46_40:
   483   000228                     
   484                           ;TITIMER.c: 54:   for (counter=0;counter<20;counter++)
   485   000228  0E00               	movlw	0
   486   00022A  6E42               	movwf	(_counter+1)^0,c
   487   00022C  0E00               	movlw	0
   488   00022E  6E41               	movwf	_counter^0,c
   489   000230                     i2l1249:
   490   000230  BE42               	btfsc	(_counter+1)^0,7,c
   491   000232  EF24  F001         	goto	i2u47_41
   492   000236  5042               	movf	(_counter+1)^0,w,c
   493   000238  E109               	bnz	i2u47_40
   494   00023A  0E14               	movlw	20
   495   00023C  5C41               	subwf	_counter^0,w,c
   496   00023E  A0D8               	btfss	status,0,c
   497   000240  EF24  F001         	goto	i2u47_41
   498   000244  EF26  F001         	goto	i2u47_40
   499   000248                     i2u47_41:
   500   000248  EF28  F001         	goto	i2l1253
   501   00024C                     i2u47_40:
   502   00024C  EF58  F001         	goto	i2l1261
   503   000250                     i2l1253:
   504                           
   505                           ;TITIMER.c: 55:    if (s_Timers[counter].b_busy==1)
   506   000250  C041  F051         	movff	_counter,___wmul@multiplier
   507   000254  C042  F052         	movff	_counter+1,___wmul@multiplier+1
   508   000258  0E00               	movlw	0
   509   00025A  6E54               	movwf	(___wmul@multiplicand+1)^0,c
   510   00025C  0E03               	movlw	3
   511   00025E  6E53               	movwf	___wmul@multiplicand^0,c
   512   000260  EC92  F001         	call	___wmul	;wreg free
   513   000264  0E03               	movlw	low (_s_Timers+2)
   514   000266  2451               	addwf	?___wmul^0,w,c
   515   000268  6ED9               	movwf	fsr2l,c
   516   00026A  0E00               	movlw	high (_s_Timers+2)
   517   00026C  2052               	addwfc	(?___wmul+1)^0,w,c
   518   00026E  6EDA               	movwf	fsr2h,c
   519   000270  04DE               	decf	postinc2,w,c
   520   000272  A4D8               	btfss	status,2,c
   521   000274  EF3E  F001         	goto	i2u48_41
   522   000278  EF40  F001         	goto	i2u48_40
   523   00027C                     i2u48_41:
   524   00027C  EF54  F001         	goto	i2l1257
   525   000280                     i2u48_40:
   526   000280                     
   527                           ;TITIMER.c: 56:     s_Timers[counter].h_TicsInicials -= h_Tics;
   528   000280  C041  F051         	movff	_counter,___wmul@multiplier
   529   000284  C042  F052         	movff	_counter+1,___wmul@multiplier+1
   530   000288  0E00               	movlw	0
   531   00028A  6E54               	movwf	(___wmul@multiplicand+1)^0,c
   532   00028C  0E03               	movlw	3
   533   00028E  6E53               	movwf	___wmul@multiplicand^0,c
   534   000290  EC92  F001         	call	___wmul	;wreg free
   535   000294  0E01               	movlw	low _s_Timers
   536   000296  2451               	addwf	?___wmul^0,w,c
   537   000298  6ED9               	movwf	fsr2l,c
   538   00029A  0E00               	movlw	high _s_Timers
   539   00029C  2052               	addwfc	(?___wmul+1)^0,w,c
   540   00029E  6EDA               	movwf	fsr2h,c
   541   0002A0  5043               	movf	_h_Tics^0,w,c
   542   0002A2  5EDE               	subwf	postinc2,f,c
   543   0002A4  5044               	movf	(_h_Tics+1)^0,w,c
   544   0002A6  5ADD               	subwfb	postdec2,f,c
   545   0002A8                     i2l1257:
   546   0002A8  4A41               	infsnz	_counter^0,f,c
   547   0002AA  2A42               	incf	(_counter+1)^0,f,c
   548   0002AC  EF18  F001         	goto	i2l1249
   549   0002B0                     i2l1261:
   550                           
   551                           ;TITIMER.c: 57:   h_Tics=0;
   552   0002B0  0E00               	movlw	0
   553   0002B2  6E44               	movwf	(_h_Tics+1)^0,c
   554   0002B4  0E00               	movlw	0
   555   0002B6  6E43               	movwf	_h_Tics^0,c
   556   0002B8                     i2l75:
   557   0002B8  0012               	return		;funcret
   558   0002BA                     __end_of_RSI_Timer0:
   559                           	callstack 0
   560                           
   561 ;; *************** function ___wmul *****************
   562 ;; Defined at:
   563 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;  multiplier      2    0[COMRAM] unsigned int 
   566 ;;  multiplicand    2    2[COMRAM] unsigned int 
   567 ;; Auto vars:     Size  Location     Type
   568 ;;  product         2    4[COMRAM] unsigned int 
   569 ;; Return value:  Size  Location     Type
   570 ;;                  2    0[COMRAM] unsigned int 
   571 ;; Registers used:
   572 ;;		wreg, status,2, status,0, prodl, prodh
   573 ;; Tracked objects:
   574 ;;		On entry : 0/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMRAM   BANK0   BANK1
   578 ;;      Params:         4       0       0
   579 ;;      Locals:         2       0       0
   580 ;;      Temps:          0       0       0
   581 ;;      Totals:         6       0       0
   582 ;;Total ram usage:        6 bytes
   583 ;; Hardware stack levels used: 1
   584 ;; This function calls:
   585 ;;		Nothing
   586 ;; This function is called by:
   587 ;;		_RSI_Timer0
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591                           	psect	text4
   592   000324                     __ptext4:
   593                           	callstack 0
   594   000324                     ___wmul:
   595                           	callstack 27
   596   000324  5051               	movf	___wmul@multiplier^0,w,c
   597   000326  0253               	mulwf	___wmul@multiplicand^0,c
   598   000328  CFF3 F055          	movff	prodl,___wmul@product
   599   00032C  CFF4 F056          	movff	prodh,___wmul@product+1
   600   000330  5051               	movf	___wmul@multiplier^0,w,c
   601   000332  0254               	mulwf	(___wmul@multiplicand+1)^0,c
   602   000334  50F3               	movf	243,w,c
   603   000336  2656               	addwf	(___wmul@product+1)^0,f,c
   604   000338  5052               	movf	(___wmul@multiplier+1)^0,w,c
   605   00033A  0253               	mulwf	___wmul@multiplicand^0,c
   606   00033C  50F3               	movf	243,w,c
   607   00033E  2656               	addwf	(___wmul@product+1)^0,f,c
   608   000340  C055  F051         	movff	___wmul@product,?___wmul
   609   000344  C056  F052         	movff	___wmul@product+1,?___wmul+1
   610   000348  0012               	return		;funcret
   611   00034A                     __end_of___wmul:
   612                           	callstack 0
   613                           
   614                           	psect	rparam
   615   000000                     
   616                           	psect	temp
   617   00005D                     btemp:
   618                           	callstack 0
   619   00005D                     	ds	1
   620   000000                     int$flags	set	btemp
   621   000000                     wtemp8	set	btemp+1
   622   000000                     ttemp5	set	btemp+1
   623   000000                     ttemp6	set	btemp+4
   624   000000                     ttemp7	set	btemp+8
   625                           
   626                           	psect	idloc
   627                           
   628                           ;Config register IDLOC0 @ 0x200000
   629                           ;	unspecified, using default values
   630   200000                     	org	2097152
   631   200000  FF                 	db	255
   632                           
   633                           ;Config register IDLOC1 @ 0x200001
   634                           ;	unspecified, using default values
   635   200001                     	org	2097153
   636   200001  FF                 	db	255
   637                           
   638                           ;Config register IDLOC2 @ 0x200002
   639                           ;	unspecified, using default values
   640   200002                     	org	2097154
   641   200002  FF                 	db	255
   642                           
   643                           ;Config register IDLOC3 @ 0x200003
   644                           ;	unspecified, using default values
   645   200003                     	org	2097155
   646   200003  FF                 	db	255
   647                           
   648                           ;Config register IDLOC4 @ 0x200004
   649                           ;	unspecified, using default values
   650   200004                     	org	2097156
   651   200004  FF                 	db	255
   652                           
   653                           ;Config register IDLOC5 @ 0x200005
   654                           ;	unspecified, using default values
   655   200005                     	org	2097157
   656   200005  FF                 	db	255
   657                           
   658                           ;Config register IDLOC6 @ 0x200006
   659                           ;	unspecified, using default values
   660   200006                     	org	2097158
   661   200006  FF                 	db	255
   662                           
   663                           ;Config register IDLOC7 @ 0x200007
   664                           ;	unspecified, using default values
   665   200007                     	org	2097159
   666   200007  FF                 	db	255
   667                           
   668                           	psect	config
   669                           
   670                           ; Padding undefined space
   671   300000                     	org	3145728
   672   300000  FF                 	db	255
   673                           
   674                           ;Config register CONFIG1H @ 0x300001
   675                           ;	Oscillator
   676                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
   677                           ;	Fail-Safe Clock Monitor Enable bit
   678                           ;	FCMEN = 0x0, unprogrammed default
   679                           ;	Internal/External Oscillator Switchover bit
   680                           ;	IESO = 0x0, unprogrammed default
   681   300001                     	org	3145729
   682   300001  06                 	db	6
   683                           
   684                           ;Config register CONFIG2L @ 0x300002
   685                           ;	Power-up Timer Enable bit
   686                           ;	PWRT = OFF, PWRT disabled
   687                           ;	Brown-out Reset Enable bits
   688                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   689                           ;	Brown-out Reset Voltage bits
   690                           ;	BORV = 0x3, unprogrammed default
   691   300002                     	org	3145730
   692   300002  19                 	db	25
   693                           
   694                           ;Config register CONFIG2H @ 0x300003
   695                           ;	Watchdog Timer Enable bit
   696                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   697                           ;	Watchdog Timer Postscale Select bits
   698                           ;	WDTPS = 0xF, unprogrammed default
   699   300003                     	org	3145731
   700   300003  1E                 	db	30
   701                           
   702                           ; Padding undefined space
   703   300004                     	org	3145732
   704   300004  FF                 	db	255
   705                           
   706                           ;Config register CONFIG3H @ 0x300005
   707                           ;	CCP2 MUX bit
   708                           ;	CCP2MX = 0x1, unprogrammed default
   709                           ;	PORTB A/D Enable bit
   710                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
   711                           ;	Low-Power Timer1 Oscillator Enable bit
   712                           ;	LPT1OSC = 0x0, unprogrammed default
   713                           ;	MCLR Pin Enable bit
   714                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   715   300005                     	org	3145733
   716   300005  81                 	db	129
   717                           
   718                           ;Config register CONFIG4L @ 0x300006
   719                           ;	Stack Full/Underflow Reset Enable bit
   720                           ;	STVREN = 0x1, unprogrammed default
   721                           ;	Single-Supply ICSP Enable bit
   722                           ;	LVP = OFF, Single-Supply ICSP disabled
   723                           ;	Boot Block Size Select bits
   724                           ;	BBSIZ = 0x0, unprogrammed default
   725                           ;	Extended Instruction Set Enable bit
   726                           ;	XINST = 0x0, unprogrammed default
   727                           ;	Background Debugger Enable bit
   728                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
   729   300006                     	org	3145734
   730   300006  81                 	db	129
   731                           
   732                           ; Padding undefined space
   733   300007                     	org	3145735
   734   300007  FF                 	db	255
   735                           
   736                           ;Config register CONFIG5L @ 0x300008
   737                           ;	unspecified, using default values
   738                           ;	Code Protection bit
   739                           ;	CP0 = 0x1, unprogrammed default
   740                           ;	Code Protection bit
   741                           ;	CP1 = 0x1, unprogrammed default
   742   300008                     	org	3145736
   743   300008  03                 	db	3
   744                           
   745                           ;Config register CONFIG5H @ 0x300009
   746                           ;	unspecified, using default values
   747                           ;	Boot Block Code Protection bitProtect Boot
   748                           ;	CPB = 0x1, unprogrammed default
   749                           ;	Data EEPROM Code Protection bit
   750                           ;	CPD = 0x1, unprogrammed default
   751   300009                     	org	3145737
   752   300009  C0                 	db	192
   753                           
   754                           ;Config register CONFIG6L @ 0x30000A
   755                           ;	unspecified, using default values
   756                           ;	Write Protection bit
   757                           ;	WRT0 = 0x1, unprogrammed default
   758                           ;	Write Protection bit
   759                           ;	WRT1 = 0x1, unprogrammed default
   760   30000A                     	org	3145738
   761   30000A  03                 	db	3
   762                           
   763                           ;Config register CONFIG6H @ 0x30000B
   764                           ;	unspecified, using default values
   765                           ;	Configuration Register Write Protection bit
   766                           ;	WRTC = 0x1, unprogrammed default
   767                           ;	Boot Block Write Protection bit
   768                           ;	WRTB = 0x1, unprogrammed default
   769                           ;	Data EEPROM Write Protection bit
   770                           ;	WRTD = 0x1, unprogrammed default
   771   30000B                     	org	3145739
   772   30000B  E0                 	db	224
   773                           
   774                           ;Config register CONFIG7L @ 0x30000C
   775                           ;	unspecified, using default values
   776                           ;	Table Read Protection bit
   777                           ;	EBTR0 = 0x1, unprogrammed default
   778                           ;	Table Read Protection bit
   779                           ;	EBTR1 = 0x1, unprogrammed default
   780   30000C                     	org	3145740
   781   30000C  03                 	db	3
   782                           
   783                           ;Config register CONFIG7H @ 0x30000D
   784                           ;	unspecified, using default values
   785                           ;	Boot Block Table Read Protection bit
   786                           ;	EBTRB = 0x1, unprogrammed default
   787   30000D                     	org	3145741
   788   30000D  40                 	db	64
   789                           tosu	equ	0xFFF
   790                           tosh	equ	0xFFE
   791                           tosl	equ	0xFFD
   792                           stkptr	equ	0xFFC
   793                           pclatu	equ	0xFFB
   794                           pclath	equ	0xFFA
   795                           pcl	equ	0xFF9
   796                           tblptru	equ	0xFF8
   797                           tblptrh	equ	0xFF7
   798                           tblptrl	equ	0xFF6
   799                           tablat	equ	0xFF5
   800                           prodh	equ	0xFF4
   801                           prodl	equ	0xFF3
   802                           indf0	equ	0xFEF
   803                           postinc0	equ	0xFEE
   804                           postdec0	equ	0xFED
   805                           preinc0	equ	0xFEC
   806                           plusw0	equ	0xFEB
   807                           fsr0h	equ	0xFEA
   808                           fsr0l	equ	0xFE9
   809                           wreg	equ	0xFE8
   810                           indf1	equ	0xFE7
   811                           postinc1	equ	0xFE6
   812                           postdec1	equ	0xFE5
   813                           preinc1	equ	0xFE4
   814                           plusw1	equ	0xFE3
   815                           fsr1h	equ	0xFE2
   816                           fsr1l	equ	0xFE1
   817                           bsr	equ	0xFE0
   818                           indf2	equ	0xFDF
   819                           postinc2	equ	0xFDE
   820                           postdec2	equ	0xFDD
   821                           preinc2	equ	0xFDC
   822                           plusw2	equ	0xFDB
   823                           fsr2h	equ	0xFDA
   824                           fsr2l	equ	0xFD9
   825                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    2
    Data        45
    BSS         80
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     11      92
    BANK0           128      0      45
    BANK1           256      0       0

Pointer List with Targets:

    sp__ProcesaTecla	PTR unsigned char  size(2) Largest target is 45
		 -> teclas(BANK0[45]), 

    teclaActual	PTR unsigned char  size(2) Largest target is 45
		 -> NULL(NULL[0]), teclas(BANK0[45]), zeros(CODE[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _RSI_High in COMRAM

    _RSI_High->_RSI_Timer0
    _RSI_Timer0->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _RSI_High in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _RSI_High in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                            _initCPU
 ---------------------------------------------------------------------------------
 (1) _initCPU                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _RSI_High                                             4     4      0     463
                                              7 COMRAM     4     4      0
                         _RSI_Timer0
 ---------------------------------------------------------------------------------
 (3) _RSI_Timer0                                           1     1      0     463
                                              6 COMRAM     1     1      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initCPU

 _RSI_High (ROOT)
   _RSI_Timer0
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0      19        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      2D       5       35.2%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E      B      5C       1       73.0%
BITBIGSFRlhl        2B      0       0      13        0.0%
BITBIGSFRlhhhh      18      0       0       9        0.0%
BITBIGSFRh           D      0       0       8        0.0%
BITBIGSFRlhhlh       B      0       0      11        0.0%
BITBIGSFRlllh        7      0       0      16        0.0%
BITBIGSFRllhh        6      0       0      14        0.0%
BITBIGSFRlhhhl       4      0       0      10        0.0%
BITBIGSFRllhl        1      0       0      15        0.0%
BITBIGSFRlhhll       1      0       0      12        0.0%
BITBIGSFRllll        1      0       0      17        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      89      18        0.0%
DATA                 0      0      89       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun May 14 16:11:21 2023

                      _t 0050               _RSI_Timer0 0204                       l31 0356  
                     l48 034E                       l49 034E      ___wmul@multiplicand 0053  
                    l959 034A                      wreg 0FE8                     _LATA 0F89  
                   i2l39 002C                     i2l75 02B8                     _main 034A  
                   _mask 004F                     fsr2h 0FDA                     fsr1l 0FE1  
                   fsr2l 0FD9                     btemp 005D                     prodh 0FF4  
                   prodl 0FF3                     start 0040             ___param_bank 0000  
                  ?_main 0051                    i2l226 0348                    _TMR0H 0FD7  
                  _TMR0L 0FD6                    _PORTB 0F81                    _TRISA 0F92  
                  _TRISB 0F93                    _TRISC 0F94          __end_of_initCPU 0358  
                  _filas 0049         __end_of_RSI_High 0040                    _zeros 0201  
         __pbitbssCOMRAM 02E0                    tablat 0FF5                    ttemp5 005E  
                  ttemp6 0061                    ttemp7 0065                    status 0FD8  
                  wtemp8 005E          __initialization 02BA             __end_of_main 0356  
            ?_RSI_Timer0 0051                   ??_main 005C            __activetblptr 0002  
        _teclaPresionada 004B                   _ADCON1 0FC1                   _ADCON2 0FC0  
                 _ADRESH 0FC4                   i2l1233 0324                   i2l1241 0206  
                 i2l1235 0340                   i2l1243 020E                   i2l1261 02B0  
                 i2l1253 0250                   i2l1245 0212                   i2l1255 0280  
                 i2l1247 0228                   i2l1239 0204                   i2l1271 001A  
                 i2l1257 02A8                   i2l1249 0230                   i2l1273 0028  
                 _INTCON 0FF2                   _h_Tics 0043                   ___wmul 0324  
                 _tTecla 003F                   clear_0 02E2                   _teclas 0080  
                 isa$std 0001                ??_initCPU 005C             __mediumconst 0000  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0080  __end_of__initialization 02E8            ___rparam_used 0001  
         __pcstackCOMRAM 0051             __pidataBANK0 02F6            __end_of_zeros 0203  
              ?_RSI_High 0051        motorTeclado@state 0047              _JoyPosition 004E  
                ?___wmul 0051               _isCentered 02E0               ??_RSI_High 0058  
                _INTCON3 0FF0                  i2u46_40 0228                  i2u46_41 0224  
                i2u47_40 024C                  i2u47_41 0248                  i2u48_40 0280  
                i2u48_41 027C                  i2u49_40 0028                  i2u49_41 0024  
                __Hparam 0000                  __Lparam 0000             ??_RSI_Timer0 0057  
           __psmallconst 0200                  __pcinit 02BA                  __ramtop 0200  
                __ptext0 034A                  __ptext1 0356                  __ptext3 0204  
                __ptext4 0324                _T0CONbits 0FD5                  _initCPU 0356  
                _counter 0041                  _teclado 004A     end_of_initialization 02E8  
     __end_of_RSI_Timer0 02BA            __Lmediumconst 0000               _tick_count 0045  
                postdec1 0FE5                  postdec2 0FDD                  postinc0 0FEE  
                postinc2 0FDE               _presionada 0048          motorADCON@state 004C  
         __end_of___wmul 034A      start_initialization 02BA                 ??___wmul 0055  
            __pdataBANK0 0080              __pbssCOMRAM 0001                __pintcode 0008  
              _direction 004D                 ?_initCPU 0051              __smallconst 0200  
         ___wmul@product 0055                 _LATAbits 0F89                 _LATCbits 0F8B  
               _RCONbits 0FD0                 _RSI_High 0008               _ADCON0bits 0FC2  
      ___wmul@multiplier 0051              _INTCON2bits 0FF1                copy_data0 02CE  
               __Hrparam 0000                 __Lrparam 0000                 _s_Timers 0001  
               isa$xinst 0000                 int$flags 005D              _teclaActual 003D  
             _INTCONbits 0FF2                 intlevel2 0000  
