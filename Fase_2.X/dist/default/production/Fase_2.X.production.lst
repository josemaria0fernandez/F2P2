

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu May 04 19:36:16 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20  0000                     
    21                           ; Version 2.36
    22                           ; Generated 28/01/2022 GMT
    23                           ; 
    24                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4321 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     _LATAbits	set	3977
    57  0000                     _INTCON	set	4082
    58  0000                     _PORTDbits	set	3971
    59  0000                     _LATA	set	3977
    60  0000                     _TRISA	set	3986
    61  0000                     _INTCONbits	set	4082
    62  0000                     _TRISDbits	set	3989
    63  0000                     _TRISC	set	3988
    64  0000                     _TRISB	set	3987
    65  0000                     _ADCON2	set	4032
    66  0000                     _ADCON1	set	4033
    67  0000                     _ADCON0bits	set	4034
    68  0000                     _RCONbits	set	4048
    69  0000                     _T0CONbits	set	4053
    70  0000                     _TMR0L	set	4054
    71  0000                     _TMR0H	set	4055
    72  0000                     _INTCON3	set	4080
    73  0000                     _INTCON2bits	set	4081
    74  0000                     _LATDbits	set	3980
    75                           
    76                           ; #config settings
    77                           
    78                           	psect	cinit
    79  00014A                     __pcinit:
    80                           	callstack 0
    81  00014A                     start_initialization:
    82                           	callstack 0
    83  00014A                     __initialization:
    84                           	callstack 0
    85                           
    86                           ; Clear objects allocated to BITCOMRAM (1 bytes)
    87  00014A  6A67               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
    88                           
    89                           ; Clear objects allocated to COMRAM (91 bytes)
    90  00014C  EE00  F001         	lfsr	0,__pbssCOMRAM
    91  000150  0E5B               	movlw	91
    92  000152                     clear_0:
    93  000152  6AEE               	clrf	postinc0,c
    94  000154  06E8               	decf	wreg,f,c
    95  000156  E1FD               	bnz	clear_0
    96  000158                     end_of_initialization:
    97                           	callstack 0
    98  000158                     __end_of__initialization:
    99                           	callstack 0
   100  000158  9068               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   101  00015A  9268               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   102  00015C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   103  00015E  6EF8               	movwf	tblptru,c
   104  000160  0100               	movlb	0
   105  000162  EFB3  F000         	goto	_main	;jump to C main() function
   106                           
   107                           	psect	bitbssCOMRAM
   108  000338                     __pbitbssCOMRAM:
   109                           	callstack 0
   110  000338                     _finLCD:
   111                           	callstack 0
   112  000338                     	ds	1
   113  000339                     _inMenu:
   114                           	callstack 0
   115  000339                     	ds	1
   116  00033A                     _StopUsers:
   117                           	callstack 0
   118  00033A                     	ds	1
   119  00033B                     _finCadena2:
   120                           	callstack 0
   121  00033B                     	ds	1
   122  00033C                     _finCadena0:
   123                           	callstack 0
   124  00033C                     	ds	1
   125  00033D                     _StopLCD:
   126                           	callstack 0
   127  00033D                     	ds	1
   128                           
   129                           	psect	bssCOMRAM
   130  000001                     __pbssCOMRAM:
   131                           	callstack 0
   132  000001                     _s_Timers:
   133                           	callstack 0
   134  000001                     	ds	60
   135  00003D                     _cadenaEscritura:
   136                           	callstack 0
   137  00003D                     	ds	8
   138  000045                     _Timer:
   139                           	callstack 0
   140  000045                     	ds	2
   141  000047                     _tLCD:
   142                           	callstack 0
   143  000047                     	ds	2
   144  000049                     _counter:
   145                           	callstack 0
   146  000049                     	ds	2
   147  00004B                     _h_Tics:
   148                           	callstack 0
   149  00004B                     	ds	2
   150  00004D                     _tick_count:
   151                           	callstack 0
   152  00004D                     	ds	2
   153  00004F                     _state:
   154                           	callstack 0
   155  00004F                     	ds	1
   156  000050                     _ColumnaAct:
   157                           	callstack 0
   158  000050                     	ds	1
   159  000051                     _FilaAct:
   160                           	callstack 0
   161  000051                     	ds	1
   162  000052                     _Columnes:
   163                           	callstack 0
   164  000052                     	ds	1
   165  000053                     _Files:
   166                           	callstack 0
   167  000053                     	ds	1
   168  000054                     _cadenaActual:
   169                           	callstack 0
   170  000054                     	ds	1
   171  000055                     _posInicio:
   172                           	callstack 0
   173  000055                     	ds	1
   174  000056                     _posFila:
   175                           	callstack 0
   176  000056                     	ds	1
   177  000057                     _countFlecha:
   178                           	callstack 0
   179  000057                     	ds	1
   180  000058                     _countImp:
   181                           	callstack 0
   182  000058                     	ds	1
   183  000059                     _marquesina:
   184                           	callstack 0
   185  000059                     	ds	1
   186  00005A                     	ds	1
   187  00005B                     	ds	1
   188                           
   189                           	psect	cstackCOMRAM
   190  00005C                     __pcstackCOMRAM:
   191                           	callstack 0
   192  00005C                     ?___wmul:
   193                           	callstack 0
   194  00005C                     ___wmul@multiplier:
   195                           	callstack 0
   196                           
   197                           ; 2 bytes @ 0x0
   198  00005C                     	ds	2
   199  00005E                     ___wmul@multiplicand:
   200                           	callstack 0
   201                           
   202                           ; 2 bytes @ 0x2
   203  00005E                     	ds	2
   204  000060                     ___wmul@product:
   205                           	callstack 0
   206                           
   207                           ; 2 bytes @ 0x4
   208  000060                     	ds	2
   209  000062                     
   210                           ; 1 bytes @ 0x6
   211  000062                     	ds	1
   212  000063                     ??_RSI_High:
   213                           
   214                           ; 1 bytes @ 0x7
   215  000063                     	ds	4
   216  000067                     
   217                           ; 1 bytes @ 0xB
   218 ;;
   219 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   220 ;;
   221 ;; *************** function _main *****************
   222 ;; Defined at:
   223 ;;		line 41 in file "main.c"
   224 ;; Parameters:    Size  Location     Type
   225 ;;		None
   226 ;; Auto vars:     Size  Location     Type
   227 ;;		None
   228 ;; Return value:  Size  Location     Type
   229 ;;                  1    wreg      void 
   230 ;; Registers used:
   231 ;;		wreg, status,2, cstack
   232 ;; Tracked objects:
   233 ;;		On entry : 0/0
   234 ;;		On exit  : 0/0
   235 ;;		Unchanged: 0/0
   236 ;; Data sizes:     COMRAM   BANK0   BANK1
   237 ;;      Params:         0       0       0
   238 ;;      Locals:         0       0       0
   239 ;;      Temps:          0       0       0
   240 ;;      Totals:         0       0       0
   241 ;;Total ram usage:        0 bytes
   242 ;; Hardware stack levels required when called: 4
   243 ;; This function calls:
   244 ;;		_InitSistema
   245 ;;		_initCPU
   246 ;; This function is called by:
   247 ;;		Startup code after reset
   248 ;; This function uses a non-reentrant model
   249 ;;
   250                           
   251                           	psect	text0
   252  000166                     __ptext0:
   253                           	callstack 0
   254  000166                     _main:
   255                           	callstack 27
   256  000166  ECBB  F000         	call	_initCPU	;wreg free
   257  00016A  EC7D  F000         	call	_InitSistema	;wreg free
   258  00016E                     l50:
   259  00016E  EFB7  F000         	goto	l50
   260  000172  EF20  F000         	goto	start
   261  000176                     __end_of_main:
   262                           	callstack 0
   263                           
   264 ;; *************** function _initCPU *****************
   265 ;; Defined at:
   266 ;;		line 16 in file "main.c"
   267 ;; Parameters:    Size  Location     Type
   268 ;;		None
   269 ;; Auto vars:     Size  Location     Type
   270 ;;		None
   271 ;; Return value:  Size  Location     Type
   272 ;;                  1    wreg      void 
   273 ;; Registers used:
   274 ;;		None
   275 ;; Tracked objects:
   276 ;;		On entry : 0/0
   277 ;;		On exit  : 0/0
   278 ;;		Unchanged: 0/0
   279 ;; Data sizes:     COMRAM   BANK0   BANK1
   280 ;;      Params:         0       0       0
   281 ;;      Locals:         0       0       0
   282 ;;      Temps:          0       0       0
   283 ;;      Totals:         0       0       0
   284 ;;Total ram usage:        0 bytes
   285 ;; Hardware stack levels used: 1
   286 ;; Hardware stack levels required when called: 3
   287 ;; This function calls:
   288 ;;		Nothing
   289 ;; This function is called by:
   290 ;;		_main
   291 ;; This function uses a non-reentrant model
   292 ;;
   293                           
   294                           	psect	text1
   295  000176                     __ptext1:
   296                           	callstack 0
   297  000176                     _initCPU:
   298                           	callstack 27
   299  000176  0012               	return		;funcret
   300  000178                     __end_of_initCPU:
   301                           	callstack 0
   302                           
   303 ;; *************** function _InitSistema *****************
   304 ;; Defined at:
   305 ;;		line 60 in file "main.c"
   306 ;; Parameters:    Size  Location     Type
   307 ;;		None
   308 ;; Auto vars:     Size  Location     Type
   309 ;;		None
   310 ;; Return value:  Size  Location     Type
   311 ;;                  1    wreg      void 
   312 ;; Registers used:
   313 ;;		wreg, status,2
   314 ;; Tracked objects:
   315 ;;		On entry : 0/0
   316 ;;		On exit  : 0/0
   317 ;;		Unchanged: 0/0
   318 ;; Data sizes:     COMRAM   BANK0   BANK1
   319 ;;      Params:         0       0       0
   320 ;;      Locals:         0       0       0
   321 ;;      Temps:          0       0       0
   322 ;;      Totals:         0       0       0
   323 ;;Total ram usage:        0 bytes
   324 ;; Hardware stack levels used: 1
   325 ;; Hardware stack levels required when called: 3
   326 ;; This function calls:
   327 ;;		Nothing
   328 ;; This function is called by:
   329 ;;		_main
   330 ;; This function uses a non-reentrant model
   331 ;;
   332                           
   333                           	psect	text2
   334  0000FA                     __ptext2:
   335                           	callstack 0
   336  0000FA                     _InitSistema:
   337                           	callstack 27
   338  0000FA                     
   339                           ;main.c: 62:     TRISA = 0x07;
   340  0000FA  0E07               	movlw	7
   341  0000FC  6E92               	movwf	146,c	;volatile
   342  0000FE                     
   343                           ;main.c: 63:     ADCON0bits.ADON = 1;
   344  0000FE  80C2               	bsf	194,0,c	;volatile
   345                           
   346                           ;main.c: 64:     ADCON1 = 0x0C;
   347  000100  0E0C               	movlw	12
   348  000102  6EC1               	movwf	193,c	;volatile
   349                           
   350                           ;main.c: 65:     ADCON2 = 0x0E;
   351  000104  0E0E               	movlw	14
   352  000106  6EC0               	movwf	192,c	;volatile
   353                           
   354                           ;main.c: 67:     TRISB = 0x0F;
   355  000108  0E0F               	movlw	15
   356  00010A  6E93               	movwf	147,c	;volatile
   357                           
   358                           ;main.c: 69:     TRISC = 0x80;
   359  00010C  0E80               	movlw	128
   360  00010E  6E94               	movwf	148,c	;volatile
   361                           
   362                           ;main.c: 71:     INTCON = 0xE0;
   363  000110  0EE0               	movlw	224
   364  000112  6EF2               	movwf	242,c	;volatile
   365  000114                     
   366                           ;main.c: 72:     RCONbits.IPEN = 0;
   367  000114  9ED0               	bcf	208,7,c	;volatile
   368  000116                     
   369                           ;main.c: 73:     INTCON2bits.RBPU = 0;
   370  000116  9EF1               	bcf	241,7,c	;volatile
   371                           
   372                           ;main.c: 74:     INTCON3 = 0x00;
   373  000118  0E00               	movlw	0
   374  00011A  6EF0               	movwf	240,c	;volatile
   375                           
   376                           ;main.c: 75:     LATA = 0;
   377  00011C  0E00               	movlw	0
   378  00011E  6E89               	movwf	137,c	;volatile
   379  000120                     
   380                           ;main.c: 76:     LATAbits.LATA4 = 0;
   381  000120  9889               	bcf	137,4,c	;volatile
   382  000122  0012               	return		;funcret
   383  000124                     __end_of_InitSistema:
   384                           	callstack 0
   385                           
   386 ;; *************** function _RSI_High *****************
   387 ;; Defined at:
   388 ;;		line 33 in file "main.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;		None
   391 ;; Auto vars:     Size  Location     Type
   392 ;;		None
   393 ;; Return value:  Size  Location     Type
   394 ;;                  1    wreg      void 
   395 ;; Registers used:
   396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   397 ;; Tracked objects:
   398 ;;		On entry : 0/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMRAM   BANK0   BANK1
   402 ;;      Params:         0       0       0
   403 ;;      Locals:         0       0       0
   404 ;;      Temps:          4       0       0
   405 ;;      Totals:         4       0       0
   406 ;;Total ram usage:        4 bytes
   407 ;; Hardware stack levels used: 1
   408 ;; Hardware stack levels required when called: 2
   409 ;; This function calls:
   410 ;;		_RSI_Timer0
   411 ;; This function is called by:
   412 ;;		Interrupt level 2
   413 ;; This function uses a non-reentrant model
   414 ;;
   415                           
   416                           	psect	intcode
   417  000008                     __pintcode:
   418                           	callstack 0
   419  000008                     _RSI_High:
   420                           	callstack 27
   421                           
   422                           ;incstack = 0
   423  000008  8268               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   424  00000A  CFD9 F063          	movff	fsr2l,??_RSI_High
   425  00000E  CFDA F064          	movff	fsr2h,??_RSI_High+1
   426  000012  CFF3 F065          	movff	prodl,??_RSI_High+2
   427  000016  CFF4 F066          	movff	prodh,??_RSI_High+3
   428  00001A  A4F2               	btfss	242,2,c	;volatile
   429  00001C  EF12  F000         	goto	i2u94_41
   430  000020  EF14  F000         	goto	i2u94_40
   431  000024                     i2u94_41:
   432  000024  EF16  F000         	goto	i2l41
   433  000028                     i2u94_40:
   434  000028  EC22  F000         	call	_RSI_Timer0	;wreg free
   435  00002C                     i2l41:
   436  00002C  C066  FFF4         	movff	??_RSI_High+3,prodh
   437  000030  C065  FFF3         	movff	??_RSI_High+2,prodl
   438  000034  C064  FFDA         	movff	??_RSI_High+1,fsr2h
   439  000038  C063  FFD9         	movff	??_RSI_High,fsr2l
   440  00003C  9268               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   441  00003E  0011               	retfie		f
   442  000040                     __end_of_RSI_High:
   443                           	callstack 0
   444                           
   445 ;; *************** function _RSI_Timer0 *****************
   446 ;; Defined at:
   447 ;;		line 44 in file "TITIMER.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;		None
   450 ;; Auto vars:     Size  Location     Type
   451 ;;		None
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      void 
   454 ;; Registers used:
   455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMRAM   BANK0   BANK1
   461 ;;      Params:         0       0       0
   462 ;;      Locals:         0       0       0
   463 ;;      Temps:          1       0       0
   464 ;;      Totals:         1       0       0
   465 ;;Total ram usage:        1 bytes
   466 ;; Hardware stack levels used: 1
   467 ;; Hardware stack levels required when called: 1
   468 ;; This function calls:
   469 ;;		___wmul
   470 ;; This function is called by:
   471 ;;		_RSI_High
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           
   475                           	psect	text4
   476  000044                     __ptext4:
   477                           	callstack 0
   478  000044                     _RSI_Timer0:
   479                           	callstack 27
   480  000044                     
   481                           ;TITIMER.c: 47:      INTCONbits.TMR0IF = 0;
   482  000044  94F2               	bcf	242,2,c	;volatile
   483  000046                     
   484                           ;TITIMER.c: 49:         TMR0H = 0xEF;
   485  000046  0EEF               	movlw	239
   486  000048  6ED7               	movwf	215,c	;volatile
   487                           
   488                           ;TITIMER.c: 50:         TMR0L = 0xBB;
   489  00004A  0EBB               	movlw	187
   490  00004C  6ED6               	movwf	214,c	;volatile
   491  00004E                     
   492                           ;TITIMER.c: 53:  h_Tics++;
   493  00004E  4A4B               	infsnz	_h_Tics^0,f,c
   494  000050  2A4C               	incf	(_h_Tics+1)^0,f,c
   495  000052                     
   496                           ;TITIMER.c: 55:  if (h_Tics>=30000) {
   497  000052  0E30               	movlw	48
   498  000054  5C4B               	subwf	_h_Tics^0,w,c
   499  000056  0E75               	movlw	117
   500  000058  584C               	subwfb	(_h_Tics+1)^0,w,c
   501  00005A  A0D8               	btfss	status,0,c
   502  00005C  EF32  F000         	goto	i2u91_41
   503  000060  EF34  F000         	goto	i2u91_40
   504  000064                     i2u91_41:
   505  000064  EF7C  F000         	goto	i2l77
   506  000068                     i2u91_40:
   507  000068                     
   508                           ;TITIMER.c: 57:   for (counter=0;counter<20;counter++)
   509  000068  0E00               	movlw	0
   510  00006A  6E4A               	movwf	(_counter+1)^0,c
   511  00006C  0E00               	movlw	0
   512  00006E  6E49               	movwf	_counter^0,c
   513  000070                     i2l1523:
   514  000070  BE4A               	btfsc	(_counter+1)^0,7,c
   515  000072  EF44  F000         	goto	i2u92_41
   516  000076  504A               	movf	(_counter+1)^0,w,c
   517  000078  E109               	bnz	i2u92_40
   518  00007A  0E14               	movlw	20
   519  00007C  5C49               	subwf	_counter^0,w,c
   520  00007E  A0D8               	btfss	status,0,c
   521  000080  EF44  F000         	goto	i2u92_41
   522  000084  EF46  F000         	goto	i2u92_40
   523  000088                     i2u92_41:
   524  000088  EF48  F000         	goto	i2l1527
   525  00008C                     i2u92_40:
   526  00008C  EF78  F000         	goto	i2l1535
   527  000090                     i2l1527:
   528                           
   529                           ;TITIMER.c: 58:    if (s_Timers[counter].b_busy==1)
   530  000090  C049  F05C         	movff	_counter,___wmul@multiplier
   531  000094  C04A  F05D         	movff	_counter+1,___wmul@multiplier+1
   532  000098  0E00               	movlw	0
   533  00009A  6E5F               	movwf	(___wmul@multiplicand+1)^0,c
   534  00009C  0E03               	movlw	3
   535  00009E  6E5E               	movwf	___wmul@multiplicand^0,c
   536  0000A0  EC92  F000         	call	___wmul	;wreg free
   537  0000A4  0E03               	movlw	low (_s_Timers+2)
   538  0000A6  245C               	addwf	?___wmul^0,w,c
   539  0000A8  6ED9               	movwf	fsr2l,c
   540  0000AA  0E00               	movlw	high (_s_Timers+2)
   541  0000AC  205D               	addwfc	(?___wmul+1)^0,w,c
   542  0000AE  6EDA               	movwf	fsr2h,c
   543  0000B0  04DE               	decf	postinc2,w,c
   544  0000B2  A4D8               	btfss	status,2,c
   545  0000B4  EF5E  F000         	goto	i2u93_41
   546  0000B8  EF60  F000         	goto	i2u93_40
   547  0000BC                     i2u93_41:
   548  0000BC  EF74  F000         	goto	i2l1531
   549  0000C0                     i2u93_40:
   550  0000C0                     
   551                           ;TITIMER.c: 59:     s_Timers[counter].h_TicsInicials -= h_Tics;
   552  0000C0  C049  F05C         	movff	_counter,___wmul@multiplier
   553  0000C4  C04A  F05D         	movff	_counter+1,___wmul@multiplier+1
   554  0000C8  0E00               	movlw	0
   555  0000CA  6E5F               	movwf	(___wmul@multiplicand+1)^0,c
   556  0000CC  0E03               	movlw	3
   557  0000CE  6E5E               	movwf	___wmul@multiplicand^0,c
   558  0000D0  EC92  F000         	call	___wmul	;wreg free
   559  0000D4  0E01               	movlw	low _s_Timers
   560  0000D6  245C               	addwf	?___wmul^0,w,c
   561  0000D8  6ED9               	movwf	fsr2l,c
   562  0000DA  0E00               	movlw	high _s_Timers
   563  0000DC  205D               	addwfc	(?___wmul+1)^0,w,c
   564  0000DE  6EDA               	movwf	fsr2h,c
   565  0000E0  504B               	movf	_h_Tics^0,w,c
   566  0000E2  5EDE               	subwf	postinc2,f,c
   567  0000E4  504C               	movf	(_h_Tics+1)^0,w,c
   568  0000E6  5ADD               	subwfb	postdec2,f,c
   569  0000E8                     i2l1531:
   570  0000E8  4A49               	infsnz	_counter^0,f,c
   571  0000EA  2A4A               	incf	(_counter+1)^0,f,c
   572  0000EC  EF38  F000         	goto	i2l1523
   573  0000F0                     i2l1535:
   574                           
   575                           ;TITIMER.c: 60:   h_Tics=0;
   576  0000F0  0E00               	movlw	0
   577  0000F2  6E4C               	movwf	(_h_Tics+1)^0,c
   578  0000F4  0E00               	movlw	0
   579  0000F6  6E4B               	movwf	_h_Tics^0,c
   580  0000F8                     i2l77:
   581  0000F8  0012               	return		;funcret
   582  0000FA                     __end_of_RSI_Timer0:
   583                           	callstack 0
   584                           
   585 ;; *************** function ___wmul *****************
   586 ;; Defined at:
   587 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;  multiplier      2    0[COMRAM] unsigned int 
   590 ;;  multiplicand    2    2[COMRAM] unsigned int 
   591 ;; Auto vars:     Size  Location     Type
   592 ;;  product         2    4[COMRAM] unsigned int 
   593 ;; Return value:  Size  Location     Type
   594 ;;                  2    0[COMRAM] unsigned int 
   595 ;; Registers used:
   596 ;;		wreg, status,2, status,0, prodl, prodh
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMRAM   BANK0   BANK1
   602 ;;      Params:         4       0       0
   603 ;;      Locals:         2       0       0
   604 ;;      Temps:          0       0       0
   605 ;;      Totals:         6       0       0
   606 ;;Total ram usage:        6 bytes
   607 ;; Hardware stack levels used: 1
   608 ;; This function calls:
   609 ;;		Nothing
   610 ;; This function is called by:
   611 ;;		_RSI_Timer0
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           	psect	text5
   616  000124                     __ptext5:
   617                           	callstack 0
   618  000124                     ___wmul:
   619                           	callstack 27
   620  000124  505C               	movf	___wmul@multiplier^0,w,c
   621  000126  025E               	mulwf	___wmul@multiplicand^0,c
   622  000128  CFF3 F060          	movff	prodl,___wmul@product
   623  00012C  CFF4 F061          	movff	prodh,___wmul@product+1
   624  000130  505C               	movf	___wmul@multiplier^0,w,c
   625  000132  025F               	mulwf	(___wmul@multiplicand+1)^0,c
   626  000134  50F3               	movf	243,w,c
   627  000136  2661               	addwf	(___wmul@product+1)^0,f,c
   628  000138  505D               	movf	(___wmul@multiplier+1)^0,w,c
   629  00013A  025E               	mulwf	___wmul@multiplicand^0,c
   630  00013C  50F3               	movf	243,w,c
   631  00013E  2661               	addwf	(___wmul@product+1)^0,f,c
   632  000140  C060  F05C         	movff	___wmul@product,?___wmul
   633  000144  C061  F05D         	movff	___wmul@product+1,?___wmul+1
   634  000148  0012               	return		;funcret
   635  00014A                     __end_of___wmul:
   636                           	callstack 0
   637  0000                     
   638                           	psect	rparam
   639  0000                     
   640                           	psect	temp
   641  000068                     btemp:
   642                           	callstack 0
   643  000068                     	ds	1
   644  0000                     int$flags	set	btemp
   645  0000                     wtemp8	set	btemp+1
   646  0000                     ttemp5	set	btemp+1
   647  0000                     ttemp6	set	btemp+4
   648  0000                     ttemp7	set	btemp+8
   649                           
   650                           	psect	idloc
   651                           
   652                           ;Config register IDLOC0 @ 0x200000
   653                           ;	unspecified, using default values
   654  200000                     	org	2097152
   655  200000  FF                 	db	255
   656                           
   657                           ;Config register IDLOC1 @ 0x200001
   658                           ;	unspecified, using default values
   659  200001                     	org	2097153
   660  200001  FF                 	db	255
   661                           
   662                           ;Config register IDLOC2 @ 0x200002
   663                           ;	unspecified, using default values
   664  200002                     	org	2097154
   665  200002  FF                 	db	255
   666                           
   667                           ;Config register IDLOC3 @ 0x200003
   668                           ;	unspecified, using default values
   669  200003                     	org	2097155
   670  200003  FF                 	db	255
   671                           
   672                           ;Config register IDLOC4 @ 0x200004
   673                           ;	unspecified, using default values
   674  200004                     	org	2097156
   675  200004  FF                 	db	255
   676                           
   677                           ;Config register IDLOC5 @ 0x200005
   678                           ;	unspecified, using default values
   679  200005                     	org	2097157
   680  200005  FF                 	db	255
   681                           
   682                           ;Config register IDLOC6 @ 0x200006
   683                           ;	unspecified, using default values
   684  200006                     	org	2097158
   685  200006  FF                 	db	255
   686                           
   687                           ;Config register IDLOC7 @ 0x200007
   688                           ;	unspecified, using default values
   689  200007                     	org	2097159
   690  200007  FF                 	db	255
   691                           
   692                           	psect	config
   693                           
   694                           ; Padding undefined space
   695  300000                     	org	3145728
   696  300000  FF                 	db	255
   697                           
   698                           ;Config register CONFIG1H @ 0x300001
   699                           ;	Oscillator
   700                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
   701                           ;	Fail-Safe Clock Monitor Enable bit
   702                           ;	FCMEN = 0x0, unprogrammed default
   703                           ;	Internal/External Oscillator Switchover bit
   704                           ;	IESO = 0x0, unprogrammed default
   705  300001                     	org	3145729
   706  300001  06                 	db	6
   707                           
   708                           ;Config register CONFIG2L @ 0x300002
   709                           ;	Power-up Timer Enable bit
   710                           ;	PWRT = OFF, PWRT disabled
   711                           ;	Brown-out Reset Enable bits
   712                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   713                           ;	Brown-out Reset Voltage bits
   714                           ;	BORV = 0x3, unprogrammed default
   715  300002                     	org	3145730
   716  300002  19                 	db	25
   717                           
   718                           ;Config register CONFIG2H @ 0x300003
   719                           ;	Watchdog Timer Enable bit
   720                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   721                           ;	Watchdog Timer Postscale Select bits
   722                           ;	WDTPS = 0xF, unprogrammed default
   723  300003                     	org	3145731
   724  300003  1E                 	db	30
   725                           
   726                           ; Padding undefined space
   727  300004                     	org	3145732
   728  300004  FF                 	db	255
   729                           
   730                           ;Config register CONFIG3H @ 0x300005
   731                           ;	CCP2 MUX bit
   732                           ;	CCP2MX = 0x1, unprogrammed default
   733                           ;	PORTB A/D Enable bit
   734                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
   735                           ;	Low-Power Timer1 Oscillator Enable bit
   736                           ;	LPT1OSC = 0x0, unprogrammed default
   737                           ;	MCLR Pin Enable bit
   738                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   739  300005                     	org	3145733
   740  300005  81                 	db	129
   741                           
   742                           ;Config register CONFIG4L @ 0x300006
   743                           ;	Stack Full/Underflow Reset Enable bit
   744                           ;	STVREN = 0x1, unprogrammed default
   745                           ;	Single-Supply ICSP Enable bit
   746                           ;	LVP = OFF, Single-Supply ICSP disabled
   747                           ;	Boot Block Size Select bits
   748                           ;	BBSIZ = 0x0, unprogrammed default
   749                           ;	Extended Instruction Set Enable bit
   750                           ;	XINST = 0x0, unprogrammed default
   751                           ;	Background Debugger Enable bit
   752                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
   753  300006                     	org	3145734
   754  300006  81                 	db	129
   755                           
   756                           ; Padding undefined space
   757  300007                     	org	3145735
   758  300007  FF                 	db	255
   759                           
   760                           ;Config register CONFIG5L @ 0x300008
   761                           ;	unspecified, using default values
   762                           ;	Code Protection bit
   763                           ;	CP0 = 0x1, unprogrammed default
   764                           ;	Code Protection bit
   765                           ;	CP1 = 0x1, unprogrammed default
   766  300008                     	org	3145736
   767  300008  03                 	db	3
   768                           
   769                           ;Config register CONFIG5H @ 0x300009
   770                           ;	unspecified, using default values
   771                           ;	Boot Block Code Protection bitProtect Boot
   772                           ;	CPB = 0x1, unprogrammed default
   773                           ;	Data EEPROM Code Protection bit
   774                           ;	CPD = 0x1, unprogrammed default
   775  300009                     	org	3145737
   776  300009  C0                 	db	192
   777                           
   778                           ;Config register CONFIG6L @ 0x30000A
   779                           ;	unspecified, using default values
   780                           ;	Write Protection bit
   781                           ;	WRT0 = 0x1, unprogrammed default
   782                           ;	Write Protection bit
   783                           ;	WRT1 = 0x1, unprogrammed default
   784  30000A                     	org	3145738
   785  30000A  03                 	db	3
   786                           
   787                           ;Config register CONFIG6H @ 0x30000B
   788                           ;	unspecified, using default values
   789                           ;	Configuration Register Write Protection bit
   790                           ;	WRTC = 0x1, unprogrammed default
   791                           ;	Boot Block Write Protection bit
   792                           ;	WRTB = 0x1, unprogrammed default
   793                           ;	Data EEPROM Write Protection bit
   794                           ;	WRTD = 0x1, unprogrammed default
   795  30000B                     	org	3145739
   796  30000B  E0                 	db	224
   797                           
   798                           ;Config register CONFIG7L @ 0x30000C
   799                           ;	unspecified, using default values
   800                           ;	Table Read Protection bit
   801                           ;	EBTR0 = 0x1, unprogrammed default
   802                           ;	Table Read Protection bit
   803                           ;	EBTR1 = 0x1, unprogrammed default
   804  30000C                     	org	3145740
   805  30000C  03                 	db	3
   806                           
   807                           ;Config register CONFIG7H @ 0x30000D
   808                           ;	unspecified, using default values
   809                           ;	Boot Block Table Read Protection bit
   810                           ;	EBTRB = 0x1, unprogrammed default
   811  30000D                     	org	3145741
   812  30000D  40                 	db	64
   813                           tosu	equ	0xFFF
   814                           tosh	equ	0xFFE
   815                           tosl	equ	0xFFD
   816                           stkptr	equ	0xFFC
   817                           pclatu	equ	0xFFB
   818                           pclath	equ	0xFFA
   819                           pcl	equ	0xFF9
   820                           tblptru	equ	0xFF8
   821                           tblptrh	equ	0xFF7
   822                           tblptrl	equ	0xFF6
   823                           tablat	equ	0xFF5
   824                           prodh	equ	0xFF4
   825                           prodl	equ	0xFF3
   826                           indf0	equ	0xFEF
   827                           postinc0	equ	0xFEE
   828                           postdec0	equ	0xFED
   829                           preinc0	equ	0xFEC
   830                           plusw0	equ	0xFEB
   831                           fsr0h	equ	0xFEA
   832                           fsr0l	equ	0xFE9
   833                           wreg	equ	0xFE8
   834                           indf1	equ	0xFE7
   835                           postinc1	equ	0xFE6
   836                           postdec1	equ	0xFE5
   837                           preinc1	equ	0xFE4
   838                           plusw1	equ	0xFE3
   839                           fsr1h	equ	0xFE2
   840                           fsr1l	equ	0xFE1
   841                           bsr	equ	0xFE0
   842                           indf2	equ	0xFDF
   843                           postinc2	equ	0xFDE
   844                           postdec2	equ	0xFDD
   845                           preinc2	equ	0xFDC
   846                           plusw2	equ	0xFDB
   847                           fsr2h	equ	0xFDA
   848                           fsr2l	equ	0xFD9
   849                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         91
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     11     103
    BANK0           128      0       0
    BANK1           256      0       0

Pointer List with Targets:

    cadenaEscritura	PTR unsigned char [4] size(2) Largest target is 0


Critical Paths under _main in COMRAM

    None.

Critical Paths under _RSI_High in COMRAM

    _RSI_High->_RSI_Timer0
    _RSI_Timer0->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _RSI_High in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _RSI_High in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _InitSistema
                            _initCPU
 ---------------------------------------------------------------------------------
 (1) _initCPU                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitSistema                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _RSI_High                                             4     4      0    1463
                                              7 COMRAM     4     4      0
                         _RSI_Timer0
 ---------------------------------------------------------------------------------
 (3) _RSI_Timer0                                           1     1      0    1463
                                              6 COMRAM     1     1      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitSistema
   _initCPU

 _RSI_High (ROOT)
   _RSI_Timer0
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0      18        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E      B      67       1       81.7%
BITBIGSFRlhl        2A      0       0      12        0.0%
BITBIGSFRlhhhh      18      0       0       9        0.0%
BITBIGSFRlhhl        D      0       0      11        0.0%
BITBIGSFRh           D      0       0       8        0.0%
BITBIGSFRlllh        5      0       0      15        0.0%
BITBIGSFRllhh        5      0       0      13        0.0%
BITBIGSFRlhhhl       4      0       0      10        0.0%
BITBIGSFRllll        3      0       0      16        0.0%
BITBIGSFRllhl        2      0       0      14        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      67      17        0.0%
DATA                 0      0      67       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu May 04 19:36:16 2023

                      _t 005B               _RSI_Timer0 0044                       l33 0176  
                     l50 016E                       l51 016E                       l56 0122  
    ___wmul@multiplicand 005E                      wreg 000FE8          _cadenaEscritura 003D  
                   l1071 0116                     l1073 0120                     l1065 00FA  
                   l1145 0166                     l1067 00FE                     l1147 016A  
                   l1069 0114                     _LATA 000F89                     i2l41 002C  
                   i2l77 00F8                     _tLCD 0047                     _main 0166  
                   _mask 005A                     fsr2h 000FDA                     fsr2l 000FD9  
                   btemp 0068                     prodh 000FF4                     prodl 000FF3  
                   start 0040             ___param_bank 000000            ??_InitSistema 0067  
                  ?_main 005C                    i2l304 0148                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _Files 0053                    _Timer 0045  
        __end_of_initCPU 0178               _ColumnaAct 0050                    _state 004F  
       __end_of_RSI_High 0040           __pbitbssCOMRAM 0338                    ttemp5 0069  
                  ttemp6 006C                    ttemp7 0070                    status 000FD8  
                  wtemp8 0069             _cadenaActual 0054          __initialization 014A  
           __end_of_main 0176              ?_RSI_Timer0 005C                   ??_main 0067  
          __activetblptr 000002      __end_of_InitSistema 0124                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   i2l1521 0068                   i2l1513 0044  
                 i2l1507 0124                   i2l1531 00E8                   i2l1523 0070  
                 i2l1515 0046                   i2l1509 0140                   i2l1517 004E  
                 i2l1535 00F0                   i2l1527 0090                   i2l1519 0052  
                 i2l1529 00C0                   i2l1537 001A                   i2l1539 0028  
                 _INTCON 000FF2                   _h_Tics 004B                   ___wmul 0124  
                 _finLCD 0338                   _inMenu 0339                   clear_0 0152  
                 isa$std 000001                ??_initCPU 0067                   tblptru 000FF8  
             __accesstop 0080  __end_of__initialization 0158            ___rparam_used 000001  
         __pcstackCOMRAM 005C              _InitSistema 00FA                ?_RSI_High 005C  
             _finCadena0 033C               _finCadena2 033B                  ?___wmul 005C  
             ??_RSI_High 0063                  _INTCON3 000FF0                  i2u91_40 0068  
                i2u91_41 0064                  i2u92_40 008C                  i2u92_41 0088  
                i2u93_40 00C0                  i2u93_41 00BC                  i2u94_40 0028  
                i2u94_41 0024                  _FilaAct 0051                  __Hparam 0000  
                __Lparam 0000                  _StopLCD 033D             ??_RSI_Timer0 0062  
                __pcinit 014A                  __ramtop 0200                  __ptext0 0166  
                __ptext1 0176                  __ptext2 00FA                  __ptext4 0044  
                __ptext5 0124               _marquesina 0059                _T0CONbits 000FD5  
                _initCPU 0176                  _counter 0049                  _posFila 0056  
   end_of_initialization 0158       __end_of_RSI_Timer0 00FA            __Lmediumconst 0000  
             _tick_count 004D                  postdec2 000FDD                  postinc0 000FEE  
                postinc2 000FDE                _PORTDbits 000F83                _TRISDbits 000F95  
           ?_InitSistema 005C           __end_of___wmul 014A      start_initialization 014A  
               ??___wmul 0060              __pbssCOMRAM 0001                _StopUsers 033A  
              __pintcode 0008                 ?_initCPU 005C           ___wmul@product 0060  
               _LATAbits 000F89                 _LATDbits 000F8C                _posInicio 0055  
               _RCONbits 000FD0                 _RSI_High 0008               _ADCON0bits 000FC2  
      ___wmul@multiplier 005C              _countFlecha 0057              _INTCON2bits 000FF1  
               _Columnes 0052                 __Hrparam 0000                 __Lrparam 0000  
               _s_Timers 0001                 _countImp 0058                 isa$xinst 000000  
               int$flags 0068               _INTCONbits 000FF2                 intlevel2 0000  
