

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon May 15 16:48:33 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 09/02/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4321 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     
    59                           	psect	idataBANK0
    60   0002F6                     __pidataBANK0:
    61                           	callstack 0
    62                           
    63                           ;initializer for _teclas
    64   0002F6  31                 	db	49
    65   0002F7  31                 	db	49
    66   0002F8  31                 	db	49
    67   0002F9  31                 	db	49
    68   0002FA  2D                 	db	45
    69   0002FB  41                 	db	65
    70   0002FC  42                 	db	66
    71   0002FD  43                 	db	67
    72   0002FE  32                 	db	50
    73   0002FF  2D                 	db	45
    74   000300  44                 	db	68
    75   000301  45                 	db	69
    76   000302  46                 	db	70
    77   000303  33                 	db	51
    78   000304  2D                 	db	45
    79   000305  47                 	db	71
    80   000306  48                 	db	72
    81   000307  49                 	db	73
    82   000308  34                 	db	52
    83   000309  2D                 	db	45
    84   00030A  4A                 	db	74
    85   00030B  4B                 	db	75
    86   00030C  4C                 	db	76
    87   00030D  35                 	db	53
    88   00030E  2D                 	db	45
    89   00030F  4D                 	db	77
    90   000310  4E                 	db	78
    91   000311  4F                 	db	79
    92   000312  36                 	db	54
    93   000313  2D                 	db	45
    94   000314  50                 	db	80
    95   000315  51                 	db	81
    96   000316  52                 	db	82
    97   000317  53                 	db	83
    98   000318  37                 	db	55
    99   000319  54                 	db	84
   100   00031A  55                 	db	85
   101   00031B  56                 	db	86
   102   00031C  38                 	db	56
   103   00031D  2D                 	db	45
   104   00031E  57                 	db	87
   105   00031F  58                 	db	88
   106   000320  59                 	db	89
   107   000321  5A                 	db	90
   108   000322  39                 	db	57
   109                           
   110                           	psect	smallconst
   111   000200                     __psmallconst:
   112                           	callstack 0
   113   000200  00                 	db	0
   114   000201                     _zeros:
   115                           	callstack 0
   116   000201  30                 	db	48
   117   000202  20                 	db	32
   118   000203                     __end_of_zeros:
   119                           	callstack 0
   120   000000                     _LATAbits	set	3977
   121   000000                     _INTCON	set	4082
   122   000000                     _PORTB	set	3969
   123   000000                     _LATA	set	3977
   124   000000                     _TRISA	set	3986
   125   000000                     _INTCONbits	set	4082
   126   000000                     _TRISC	set	3988
   127   000000                     _TRISB	set	3987
   128   000000                     _ADCON2	set	4032
   129   000000                     _ADCON1	set	4033
   130   000000                     _ADCON0bits	set	4034
   131   000000                     _ADRESH	set	4036
   132   000000                     _RCONbits	set	4048
   133   000000                     _T0CONbits	set	4053
   134   000000                     _TMR0L	set	4054
   135   000000                     _TMR0H	set	4055
   136   000000                     _INTCON3	set	4080
   137   000000                     _INTCON2bits	set	4081
   138   000000                     _LATCbits	set	3979
   139   000203  00                 	db	0	; dummy byte at the end
   140   000000                     
   141                           ; #config settings
   142                           
   143                           	psect	cinit
   144   0002BA                     __pcinit:
   145                           	callstack 0
   146   0002BA                     start_initialization:
   147                           	callstack 0
   148   0002BA                     __initialization:
   149                           	callstack 0
   150                           
   151                           ; Initialize objects allocated to BANK0 (45 bytes)
   152                           ; load TBLPTR registers with __pidataBANK0
   153   0002BA  0EF6               	movlw	low __pidataBANK0
   154   0002BC  6EF6               	movwf	tblptrl,c
   155   0002BE  0E02               	movlw	high __pidataBANK0
   156   0002C0  6EF7               	movwf	tblptrh,c
   157   0002C2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   158   0002C4  6EF8               	movwf	tblptru,c
   159   0002C6  EE00  F080         	lfsr	0,__pdataBANK0
   160   0002CA  EE10 F02D          	lfsr	1,45
   161   0002CE                     copy_data0:
   162   0002CE  0009               	tblrd		*+
   163   0002D0  CFF5 FFEE          	movff	tablat,postinc0
   164   0002D4  50E5               	movf	postdec1,w,c
   165   0002D6  50E1               	movf	fsr1l,w,c
   166   0002D8  E1FA               	bnz	copy_data0
   167                           
   168                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   169   0002DA  6A5C               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   170                           
   171                           ; Clear objects allocated to COMRAM (80 bytes)
   172   0002DC  EE00  F001         	lfsr	0,__pbssCOMRAM
   173   0002E0  0E50               	movlw	80
   174   0002E2                     clear_0:
   175   0002E2  6AEE               	clrf	postinc0,c
   176   0002E4  06E8               	decf	wreg,f,c
   177   0002E6  E1FD               	bnz	clear_0
   178   0002E8                     end_of_initialization:
   179                           	callstack 0
   180   0002E8                     __end_of__initialization:
   181                           	callstack 0
   182   0002E8  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   183   0002EA  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   184   0002EC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   185   0002EE  6EF8               	movwf	tblptru,c
   186   0002F0  0100               	movlb	0
   187   0002F2  EFBA  F001         	goto	_main	;jump to C main() function
   188                           
   189                           	psect	bitbssCOMRAM
   190   0002E0                     __pbitbssCOMRAM:
   191                           	callstack 0
   192   0002E0                     _isCentered:
   193                           	callstack 0
   194   0002E0                     	ds	1
   195                           
   196                           	psect	bssCOMRAM
   197   000001                     __pbssCOMRAM:
   198                           	callstack 0
   199   000001                     _s_Timers:
   200                           	callstack 0
   201   000001                     	ds	60
   202   00003D                     _teclaActual:
   203                           	callstack 0
   204   00003D                     	ds	2
   205   00003F                     _tTecla:
   206                           	callstack 0
   207   00003F                     	ds	2
   208   000041                     _counter:
   209                           	callstack 0
   210   000041                     	ds	2
   211   000043                     _h_Tics:
   212                           	callstack 0
   213   000043                     	ds	2
   214   000045                     _tick_count:
   215                           	callstack 0
   216   000045                     	ds	2
   217   000047                     motorTeclado@state:
   218                           	callstack 0
   219   000047                     	ds	1
   220   000048                     _presionada:
   221                           	callstack 0
   222   000048                     	ds	1
   223   000049                     _filas:
   224                           	callstack 0
   225   000049                     	ds	1
   226   00004A                     _teclado:
   227                           	callstack 0
   228   00004A                     	ds	1
   229   00004B                     _teclaPresionada:
   230                           	callstack 0
   231   00004B                     	ds	1
   232   00004C                     motorADCON@state:
   233                           	callstack 0
   234   00004C                     	ds	1
   235   00004D                     _direction:
   236                           	callstack 0
   237   00004D                     	ds	1
   238   00004E                     _JoyPosition:
   239                           	callstack 0
   240   00004E                     	ds	1
   241   00004F                     	ds	1
   242   000050                     	ds	1
   243                           
   244                           	psect	dataBANK0
   245   000080                     __pdataBANK0:
   246                           	callstack 0
   247   000080                     _teclas:
   248                           	callstack 0
   249   000080                     	ds	45
   250                           
   251                           	psect	cstackCOMRAM
   252   000051                     __pcstackCOMRAM:
   253                           	callstack 0
   254   000051                     ?___wmul:
   255                           	callstack 0
   256   000051                     ___wmul@multiplier:
   257                           	callstack 0
   258                           
   259                           ; 2 bytes @ 0x0
   260   000051                     	ds	2
   261   000053                     ___wmul@multiplicand:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0x2
   265   000053                     	ds	2
   266   000055                     ___wmul@product:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0x4
   270   000055                     	ds	2
   271   000057                     
   272                           ; 1 bytes @ 0x6
   273   000057                     	ds	1
   274   000058                     ??_RSI_High:
   275                           
   276                           ; 1 bytes @ 0x7
   277   000058                     	ds	4
   278   00005C                     
   279                           ; 1 bytes @ 0xB
   280 ;;
   281 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   282 ;;
   283 ;; *************** function _main *****************
   284 ;; Defined at:
   285 ;;		line 41 in file "main.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;		None
   288 ;; Auto vars:     Size  Location     Type
   289 ;;		None
   290 ;; Return value:  Size  Location     Type
   291 ;;                  1    wreg      void 
   292 ;; Registers used:
   293 ;;		wreg, status,2, cstack
   294 ;; Tracked objects:
   295 ;;		On entry : 0/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMRAM   BANK0   BANK1
   299 ;;      Params:         0       0       0
   300 ;;      Locals:         0       0       0
   301 ;;      Temps:          0       0       0
   302 ;;      Totals:         0       0       0
   303 ;;Total ram usage:        0 bytes
   304 ;; Hardware stack levels required when called: 4
   305 ;; This function calls:
   306 ;;		_InitSistema
   307 ;;		_initCPU
   308 ;; This function is called by:
   309 ;;		Startup code after reset
   310 ;; This function uses a non-reentrant model
   311 ;;
   312                           
   313                           	psect	text0
   314   000374                     __ptext0:
   315                           	callstack 0
   316   000374                     _main:
   317                           	callstack 27
   318   000374  ECC2  F001         	call	_initCPU	;wreg free
   319   000378  EC92  F001         	call	_InitSistema	;wreg free
   320   00037C                     l50:
   321   00037C  EFBE  F001         	goto	l50
   322   000380  EF20  F000         	goto	start
   323   000384                     __end_of_main:
   324                           	callstack 0
   325                           
   326 ;; *************** function _initCPU *****************
   327 ;; Defined at:
   328 ;;		line 16 in file "main.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;		None
   331 ;; Auto vars:     Size  Location     Type
   332 ;;		None
   333 ;; Return value:  Size  Location     Type
   334 ;;                  1    wreg      void 
   335 ;; Registers used:
   336 ;;		None
   337 ;; Tracked objects:
   338 ;;		On entry : 0/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMRAM   BANK0   BANK1
   342 ;;      Params:         0       0       0
   343 ;;      Locals:         0       0       0
   344 ;;      Temps:          0       0       0
   345 ;;      Totals:         0       0       0
   346 ;;Total ram usage:        0 bytes
   347 ;; Hardware stack levels used: 1
   348 ;; Hardware stack levels required when called: 3
   349 ;; This function calls:
   350 ;;		Nothing
   351 ;; This function is called by:
   352 ;;		_main
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356                           	psect	text1
   357   000384                     __ptext1:
   358                           	callstack 0
   359   000384                     _initCPU:
   360                           	callstack 27
   361   000384  0012               	return		;funcret
   362   000386                     __end_of_initCPU:
   363                           	callstack 0
   364                           
   365 ;; *************** function _InitSistema *****************
   366 ;; Defined at:
   367 ;;		line 62 in file "main.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;		None
   370 ;; Auto vars:     Size  Location     Type
   371 ;;		None
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      void 
   374 ;; Registers used:
   375 ;;		wreg, status,2
   376 ;; Tracked objects:
   377 ;;		On entry : 0/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMRAM   BANK0   BANK1
   381 ;;      Params:         0       0       0
   382 ;;      Locals:         0       0       0
   383 ;;      Temps:          0       0       0
   384 ;;      Totals:         0       0       0
   385 ;;Total ram usage:        0 bytes
   386 ;; Hardware stack levels used: 1
   387 ;; Hardware stack levels required when called: 3
   388 ;; This function calls:
   389 ;;		Nothing
   390 ;; This function is called by:
   391 ;;		_main
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395                           	psect	text2
   396   000324                     __ptext2:
   397                           	callstack 0
   398   000324                     _InitSistema:
   399                           	callstack 27
   400   000324                     
   401                           ;main.c: 64:     TRISA = 0x07;
   402   000324  0E07               	movlw	7
   403   000326  6E92               	movwf	146,c	;volatile
   404   000328                     
   405                           ;main.c: 65:     ADCON0bits.ADON = 1;
   406   000328  80C2               	bsf	194,0,c	;volatile
   407                           
   408                           ;main.c: 66:     ADCON1 = 0x0C;
   409   00032A  0E0C               	movlw	12
   410   00032C  6EC1               	movwf	193,c	;volatile
   411                           
   412                           ;main.c: 67:     ADCON2 = 0x0E;
   413   00032E  0E0E               	movlw	14
   414   000330  6EC0               	movwf	192,c	;volatile
   415                           
   416                           ;main.c: 69:     TRISB = 0x0F;
   417   000332  0E0F               	movlw	15
   418   000334  6E93               	movwf	147,c	;volatile
   419                           
   420                           ;main.c: 71:     TRISC = 0x80;
   421   000336  0E80               	movlw	128
   422   000338  6E94               	movwf	148,c	;volatile
   423                           
   424                           ;main.c: 73:     INTCON = 0xE0;
   425   00033A  0EE0               	movlw	224
   426   00033C  6EF2               	movwf	242,c	;volatile
   427   00033E                     
   428                           ;main.c: 74:     RCONbits.IPEN = 0;
   429   00033E  9ED0               	bcf	208,7,c	;volatile
   430   000340                     
   431                           ;main.c: 75:     INTCON2bits.RBPU = 0;
   432   000340  9EF1               	bcf	241,7,c	;volatile
   433                           
   434                           ;main.c: 76:     INTCON3 = 0x00;
   435   000342  0E00               	movlw	0
   436   000344  6EF0               	movwf	240,c	;volatile
   437                           
   438                           ;main.c: 77:     LATA = 0;
   439   000346  0E00               	movlw	0
   440   000348  6E89               	movwf	137,c	;volatile
   441   00034A                     
   442                           ;main.c: 78:     LATAbits.LATA4 = 0;
   443   00034A  9889               	bcf	137,4,c	;volatile
   444   00034C  0012               	return		;funcret
   445   00034E                     __end_of_InitSistema:
   446                           	callstack 0
   447                           
   448 ;; *************** function _RSI_High *****************
   449 ;; Defined at:
   450 ;;		line 33 in file "main.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;		None
   453 ;; Auto vars:     Size  Location     Type
   454 ;;		None
   455 ;; Return value:  Size  Location     Type
   456 ;;                  1    wreg      void 
   457 ;; Registers used:
   458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   459 ;; Tracked objects:
   460 ;;		On entry : 0/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMRAM   BANK0   BANK1
   464 ;;      Params:         0       0       0
   465 ;;      Locals:         0       0       0
   466 ;;      Temps:          4       0       0
   467 ;;      Totals:         4       0       0
   468 ;;Total ram usage:        4 bytes
   469 ;; Hardware stack levels used: 1
   470 ;; Hardware stack levels required when called: 2
   471 ;; This function calls:
   472 ;;		_RSI_Timer0
   473 ;; This function is called by:
   474 ;;		Interrupt level 2
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478                           	psect	intcode
   479   000008                     __pintcode:
   480                           	callstack 0
   481   000008                     _RSI_High:
   482                           	callstack 27
   483                           
   484                           ;incstack = 0
   485   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   486   00000A  CFD9 F058          	movff	fsr2l,??_RSI_High
   487   00000E  CFDA F059          	movff	fsr2h,??_RSI_High+1
   488   000012  CFF3 F05A          	movff	prodl,??_RSI_High+2
   489   000016  CFF4 F05B          	movff	prodh,??_RSI_High+3
   490   00001A  A4F2               	btfss	242,2,c	;volatile
   491   00001C  EF12  F000         	goto	i2u49_41
   492   000020  EF14  F000         	goto	i2u49_40
   493   000024                     i2u49_41:
   494   000024  EF16  F000         	goto	i2l41
   495   000028                     i2u49_40:
   496   000028  EC02  F001         	call	_RSI_Timer0	;wreg free
   497   00002C                     i2l41:
   498   00002C  C05B  FFF4         	movff	??_RSI_High+3,prodh
   499   000030  C05A  FFF3         	movff	??_RSI_High+2,prodl
   500   000034  C059  FFDA         	movff	??_RSI_High+1,fsr2h
   501   000038  C058  FFD9         	movff	??_RSI_High,fsr2l
   502   00003C  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   503   00003E  0011               	retfie		f
   504   000040                     __end_of_RSI_High:
   505                           	callstack 0
   506                           
   507 ;; *************** function _RSI_Timer0 *****************
   508 ;; Defined at:
   509 ;;		line 44 in file "TITIMER.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;		None
   512 ;; Auto vars:     Size  Location     Type
   513 ;;		None
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMRAM   BANK0   BANK1
   523 ;;      Params:         0       0       0
   524 ;;      Locals:         0       0       0
   525 ;;      Temps:          1       0       0
   526 ;;      Totals:         1       0       0
   527 ;;Total ram usage:        1 bytes
   528 ;; Hardware stack levels used: 1
   529 ;; Hardware stack levels required when called: 1
   530 ;; This function calls:
   531 ;;		___wmul
   532 ;; This function is called by:
   533 ;;		_RSI_High
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           	psect	text4
   538   000204                     __ptext4:
   539                           	callstack 0
   540   000204                     _RSI_Timer0:
   541                           	callstack 27
   542   000204                     
   543                           ;TITIMER.c: 47:     INTCONbits.TMR0IF = 0;
   544   000204  94F2               	bcf	242,2,c	;volatile
   545   000206                     
   546                           ;TITIMER.c: 48:     TMR0H = 0xEF;
   547   000206  0EEF               	movlw	239
   548   000208  6ED7               	movwf	215,c	;volatile
   549                           
   550                           ;TITIMER.c: 49:     TMR0L = 0xBB;
   551   00020A  0EBB               	movlw	187
   552   00020C  6ED6               	movwf	214,c	;volatile
   553   00020E                     
   554                           ;TITIMER.c: 50:  h_Tics++;
   555   00020E  4A43               	infsnz	_h_Tics^0,f,c
   556   000210  2A44               	incf	(_h_Tics+1)^0,f,c
   557   000212                     
   558                           ;TITIMER.c: 52:  if (h_Tics>=30000) {
   559   000212  0E30               	movlw	48
   560   000214  5C43               	subwf	_h_Tics^0,w,c
   561   000216  0E75               	movlw	117
   562   000218  5844               	subwfb	(_h_Tics+1)^0,w,c
   563   00021A  A0D8               	btfss	status,0,c
   564   00021C  EF12  F001         	goto	i2u46_41
   565   000220  EF14  F001         	goto	i2u46_40
   566   000224                     i2u46_41:
   567   000224  EF5C  F001         	goto	i2l77
   568   000228                     i2u46_40:
   569   000228                     
   570                           ;TITIMER.c: 54:   for (counter=0;counter<20;counter++)
   571   000228  0E00               	movlw	0
   572   00022A  6E42               	movwf	(_counter+1)^0,c
   573   00022C  0E00               	movlw	0
   574   00022E  6E41               	movwf	_counter^0,c
   575   000230                     i2l1253:
   576   000230  BE42               	btfsc	(_counter+1)^0,7,c
   577   000232  EF24  F001         	goto	i2u47_41
   578   000236  5042               	movf	(_counter+1)^0,w,c
   579   000238  E109               	bnz	i2u47_40
   580   00023A  0E14               	movlw	20
   581   00023C  5C41               	subwf	_counter^0,w,c
   582   00023E  A0D8               	btfss	status,0,c
   583   000240  EF24  F001         	goto	i2u47_41
   584   000244  EF26  F001         	goto	i2u47_40
   585   000248                     i2u47_41:
   586   000248  EF28  F001         	goto	i2l1257
   587   00024C                     i2u47_40:
   588   00024C  EF58  F001         	goto	i2l1265
   589   000250                     i2l1257:
   590                           
   591                           ;TITIMER.c: 55:    if (s_Timers[counter].b_busy==1)
   592   000250  C041  F051         	movff	_counter,___wmul@multiplier
   593   000254  C042  F052         	movff	_counter+1,___wmul@multiplier+1
   594   000258  0E00               	movlw	0
   595   00025A  6E54               	movwf	(___wmul@multiplicand+1)^0,c
   596   00025C  0E03               	movlw	3
   597   00025E  6E53               	movwf	___wmul@multiplicand^0,c
   598   000260  ECA7  F001         	call	___wmul	;wreg free
   599   000264  0E03               	movlw	low (_s_Timers+2)
   600   000266  2451               	addwf	?___wmul^0,w,c
   601   000268  6ED9               	movwf	fsr2l,c
   602   00026A  0E00               	movlw	high (_s_Timers+2)
   603   00026C  2052               	addwfc	(?___wmul+1)^0,w,c
   604   00026E  6EDA               	movwf	fsr2h,c
   605   000270  04DE               	decf	postinc2,w,c
   606   000272  A4D8               	btfss	status,2,c
   607   000274  EF3E  F001         	goto	i2u48_41
   608   000278  EF40  F001         	goto	i2u48_40
   609   00027C                     i2u48_41:
   610   00027C  EF54  F001         	goto	i2l1261
   611   000280                     i2u48_40:
   612   000280                     
   613                           ;TITIMER.c: 56:     s_Timers[counter].h_TicsInicials -= h_Tics;
   614   000280  C041  F051         	movff	_counter,___wmul@multiplier
   615   000284  C042  F052         	movff	_counter+1,___wmul@multiplier+1
   616   000288  0E00               	movlw	0
   617   00028A  6E54               	movwf	(___wmul@multiplicand+1)^0,c
   618   00028C  0E03               	movlw	3
   619   00028E  6E53               	movwf	___wmul@multiplicand^0,c
   620   000290  ECA7  F001         	call	___wmul	;wreg free
   621   000294  0E01               	movlw	low _s_Timers
   622   000296  2451               	addwf	?___wmul^0,w,c
   623   000298  6ED9               	movwf	fsr2l,c
   624   00029A  0E00               	movlw	high _s_Timers
   625   00029C  2052               	addwfc	(?___wmul+1)^0,w,c
   626   00029E  6EDA               	movwf	fsr2h,c
   627   0002A0  5043               	movf	_h_Tics^0,w,c
   628   0002A2  5EDE               	subwf	postinc2,f,c
   629   0002A4  5044               	movf	(_h_Tics+1)^0,w,c
   630   0002A6  5ADD               	subwfb	postdec2,f,c
   631   0002A8                     i2l1261:
   632   0002A8  4A41               	infsnz	_counter^0,f,c
   633   0002AA  2A42               	incf	(_counter+1)^0,f,c
   634   0002AC  EF18  F001         	goto	i2l1253
   635   0002B0                     i2l1265:
   636                           
   637                           ;TITIMER.c: 57:   h_Tics=0;
   638   0002B0  0E00               	movlw	0
   639   0002B2  6E44               	movwf	(_h_Tics+1)^0,c
   640   0002B4  0E00               	movlw	0
   641   0002B6  6E43               	movwf	_h_Tics^0,c
   642   0002B8                     i2l77:
   643   0002B8  0012               	return		;funcret
   644   0002BA                     __end_of_RSI_Timer0:
   645                           	callstack 0
   646                           
   647 ;; *************** function ___wmul *****************
   648 ;; Defined at:
   649 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;  multiplier      2    0[COMRAM] unsigned int 
   652 ;;  multiplicand    2    2[COMRAM] unsigned int 
   653 ;; Auto vars:     Size  Location     Type
   654 ;;  product         2    4[COMRAM] unsigned int 
   655 ;; Return value:  Size  Location     Type
   656 ;;                  2    0[COMRAM] unsigned int 
   657 ;; Registers used:
   658 ;;		wreg, status,2, status,0, prodl, prodh
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMRAM   BANK0   BANK1
   664 ;;      Params:         4       0       0
   665 ;;      Locals:         2       0       0
   666 ;;      Temps:          0       0       0
   667 ;;      Totals:         6       0       0
   668 ;;Total ram usage:        6 bytes
   669 ;; Hardware stack levels used: 1
   670 ;; This function calls:
   671 ;;		Nothing
   672 ;; This function is called by:
   673 ;;		_RSI_Timer0
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           	psect	text5
   678   00034E                     __ptext5:
   679                           	callstack 0
   680   00034E                     ___wmul:
   681                           	callstack 27
   682   00034E  5051               	movf	___wmul@multiplier^0,w,c
   683   000350  0253               	mulwf	___wmul@multiplicand^0,c
   684   000352  CFF3 F055          	movff	prodl,___wmul@product
   685   000356  CFF4 F056          	movff	prodh,___wmul@product+1
   686   00035A  5051               	movf	___wmul@multiplier^0,w,c
   687   00035C  0254               	mulwf	(___wmul@multiplicand+1)^0,c
   688   00035E  50F3               	movf	243,w,c
   689   000360  2656               	addwf	(___wmul@product+1)^0,f,c
   690   000362  5052               	movf	(___wmul@multiplier+1)^0,w,c
   691   000364  0253               	mulwf	___wmul@multiplicand^0,c
   692   000366  50F3               	movf	243,w,c
   693   000368  2656               	addwf	(___wmul@product+1)^0,f,c
   694   00036A  C055  F051         	movff	___wmul@product,?___wmul
   695   00036E  C056  F052         	movff	___wmul@product+1,?___wmul+1
   696   000372  0012               	return		;funcret
   697   000374                     __end_of___wmul:
   698                           	callstack 0
   699                           
   700                           	psect	rparam
   701   000000                     
   702                           	psect	temp
   703   00005D                     btemp:
   704                           	callstack 0
   705   00005D                     	ds	1
   706   000000                     int$flags	set	btemp
   707   000000                     wtemp8	set	btemp+1
   708   000000                     ttemp5	set	btemp+1
   709   000000                     ttemp6	set	btemp+4
   710   000000                     ttemp7	set	btemp+8
   711                           
   712                           	psect	idloc
   713                           
   714                           ;Config register IDLOC0 @ 0x200000
   715                           ;	unspecified, using default values
   716   200000                     	org	2097152
   717   200000  FF                 	db	255
   718                           
   719                           ;Config register IDLOC1 @ 0x200001
   720                           ;	unspecified, using default values
   721   200001                     	org	2097153
   722   200001  FF                 	db	255
   723                           
   724                           ;Config register IDLOC2 @ 0x200002
   725                           ;	unspecified, using default values
   726   200002                     	org	2097154
   727   200002  FF                 	db	255
   728                           
   729                           ;Config register IDLOC3 @ 0x200003
   730                           ;	unspecified, using default values
   731   200003                     	org	2097155
   732   200003  FF                 	db	255
   733                           
   734                           ;Config register IDLOC4 @ 0x200004
   735                           ;	unspecified, using default values
   736   200004                     	org	2097156
   737   200004  FF                 	db	255
   738                           
   739                           ;Config register IDLOC5 @ 0x200005
   740                           ;	unspecified, using default values
   741   200005                     	org	2097157
   742   200005  FF                 	db	255
   743                           
   744                           ;Config register IDLOC6 @ 0x200006
   745                           ;	unspecified, using default values
   746   200006                     	org	2097158
   747   200006  FF                 	db	255
   748                           
   749                           ;Config register IDLOC7 @ 0x200007
   750                           ;	unspecified, using default values
   751   200007                     	org	2097159
   752   200007  FF                 	db	255
   753                           
   754                           	psect	config
   755                           
   756                           ; Padding undefined space
   757   300000                     	org	3145728
   758   300000  FF                 	db	255
   759                           
   760                           ;Config register CONFIG1H @ 0x300001
   761                           ;	Oscillator
   762                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
   763                           ;	Fail-Safe Clock Monitor Enable bit
   764                           ;	FCMEN = 0x0, unprogrammed default
   765                           ;	Internal/External Oscillator Switchover bit
   766                           ;	IESO = 0x0, unprogrammed default
   767   300001                     	org	3145729
   768   300001  06                 	db	6
   769                           
   770                           ;Config register CONFIG2L @ 0x300002
   771                           ;	Power-up Timer Enable bit
   772                           ;	PWRT = OFF, PWRT disabled
   773                           ;	Brown-out Reset Enable bits
   774                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   775                           ;	Brown-out Reset Voltage bits
   776                           ;	BORV = 0x3, unprogrammed default
   777   300002                     	org	3145730
   778   300002  19                 	db	25
   779                           
   780                           ;Config register CONFIG2H @ 0x300003
   781                           ;	Watchdog Timer Enable bit
   782                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   783                           ;	Watchdog Timer Postscale Select bits
   784                           ;	WDTPS = 0xF, unprogrammed default
   785   300003                     	org	3145731
   786   300003  1E                 	db	30
   787                           
   788                           ; Padding undefined space
   789   300004                     	org	3145732
   790   300004  FF                 	db	255
   791                           
   792                           ;Config register CONFIG3H @ 0x300005
   793                           ;	CCP2 MUX bit
   794                           ;	CCP2MX = 0x1, unprogrammed default
   795                           ;	PORTB A/D Enable bit
   796                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
   797                           ;	Low-Power Timer1 Oscillator Enable bit
   798                           ;	LPT1OSC = 0x0, unprogrammed default
   799                           ;	MCLR Pin Enable bit
   800                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   801   300005                     	org	3145733
   802   300005  81                 	db	129
   803                           
   804                           ;Config register CONFIG4L @ 0x300006
   805                           ;	Stack Full/Underflow Reset Enable bit
   806                           ;	STVREN = 0x1, unprogrammed default
   807                           ;	Single-Supply ICSP Enable bit
   808                           ;	LVP = OFF, Single-Supply ICSP disabled
   809                           ;	Boot Block Size Select bits
   810                           ;	BBSIZ = 0x0, unprogrammed default
   811                           ;	Extended Instruction Set Enable bit
   812                           ;	XINST = 0x0, unprogrammed default
   813                           ;	Background Debugger Enable bit
   814                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
   815   300006                     	org	3145734
   816   300006  81                 	db	129
   817                           
   818                           ; Padding undefined space
   819   300007                     	org	3145735
   820   300007  FF                 	db	255
   821                           
   822                           ;Config register CONFIG5L @ 0x300008
   823                           ;	unspecified, using default values
   824                           ;	Code Protection bit
   825                           ;	CP0 = 0x1, unprogrammed default
   826                           ;	Code Protection bit
   827                           ;	CP1 = 0x1, unprogrammed default
   828   300008                     	org	3145736
   829   300008  03                 	db	3
   830                           
   831                           ;Config register CONFIG5H @ 0x300009
   832                           ;	unspecified, using default values
   833                           ;	Boot Block Code Protection bitProtect Boot
   834                           ;	CPB = 0x1, unprogrammed default
   835                           ;	Data EEPROM Code Protection bit
   836                           ;	CPD = 0x1, unprogrammed default
   837   300009                     	org	3145737
   838   300009  C0                 	db	192
   839                           
   840                           ;Config register CONFIG6L @ 0x30000A
   841                           ;	unspecified, using default values
   842                           ;	Write Protection bit
   843                           ;	WRT0 = 0x1, unprogrammed default
   844                           ;	Write Protection bit
   845                           ;	WRT1 = 0x1, unprogrammed default
   846   30000A                     	org	3145738
   847   30000A  03                 	db	3
   848                           
   849                           ;Config register CONFIG6H @ 0x30000B
   850                           ;	unspecified, using default values
   851                           ;	Configuration Register Write Protection bit
   852                           ;	WRTC = 0x1, unprogrammed default
   853                           ;	Boot Block Write Protection bit
   854                           ;	WRTB = 0x1, unprogrammed default
   855                           ;	Data EEPROM Write Protection bit
   856                           ;	WRTD = 0x1, unprogrammed default
   857   30000B                     	org	3145739
   858   30000B  E0                 	db	224
   859                           
   860                           ;Config register CONFIG7L @ 0x30000C
   861                           ;	unspecified, using default values
   862                           ;	Table Read Protection bit
   863                           ;	EBTR0 = 0x1, unprogrammed default
   864                           ;	Table Read Protection bit
   865                           ;	EBTR1 = 0x1, unprogrammed default
   866   30000C                     	org	3145740
   867   30000C  03                 	db	3
   868                           
   869                           ;Config register CONFIG7H @ 0x30000D
   870                           ;	unspecified, using default values
   871                           ;	Boot Block Table Read Protection bit
   872                           ;	EBTRB = 0x1, unprogrammed default
   873   30000D                     	org	3145741
   874   30000D  40                 	db	64
   875                           tosu	equ	0xFFF
   876                           tosh	equ	0xFFE
   877                           tosl	equ	0xFFD
   878                           stkptr	equ	0xFFC
   879                           pclatu	equ	0xFFB
   880                           pclath	equ	0xFFA
   881                           pcl	equ	0xFF9
   882                           tblptru	equ	0xFF8
   883                           tblptrh	equ	0xFF7
   884                           tblptrl	equ	0xFF6
   885                           tablat	equ	0xFF5
   886                           prodh	equ	0xFF4
   887                           prodl	equ	0xFF3
   888                           indf0	equ	0xFEF
   889                           postinc0	equ	0xFEE
   890                           postdec0	equ	0xFED
   891                           preinc0	equ	0xFEC
   892                           plusw0	equ	0xFEB
   893                           fsr0h	equ	0xFEA
   894                           fsr0l	equ	0xFE9
   895                           wreg	equ	0xFE8
   896                           indf1	equ	0xFE7
   897                           postinc1	equ	0xFE6
   898                           postdec1	equ	0xFE5
   899                           preinc1	equ	0xFE4
   900                           plusw1	equ	0xFE3
   901                           fsr1h	equ	0xFE2
   902                           fsr1l	equ	0xFE1
   903                           bsr	equ	0xFE0
   904                           indf2	equ	0xFDF
   905                           postinc2	equ	0xFDE
   906                           postdec2	equ	0xFDD
   907                           preinc2	equ	0xFDC
   908                           plusw2	equ	0xFDB
   909                           fsr2h	equ	0xFDA
   910                           fsr2l	equ	0xFD9
   911                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    2
    Data        45
    BSS         80
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     11      92
    BANK0           128      0      45
    BANK1           256      0       0

Pointer List with Targets:

    sp__ProcesaTecla	PTR unsigned char  size(2) Largest target is 45
		 -> teclas(BANK0[45]), 

    teclaActual	PTR unsigned char  size(2) Largest target is 45
		 -> NULL(NULL[0]), teclas(BANK0[45]), zeros(CODE[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _RSI_High in COMRAM

    _RSI_High->_RSI_Timer0
    _RSI_Timer0->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _RSI_High in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _RSI_High in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _InitSistema
                            _initCPU
 ---------------------------------------------------------------------------------
 (1) _initCPU                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitSistema                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _RSI_High                                             4     4      0     463
                                              7 COMRAM     4     4      0
                         _RSI_Timer0
 ---------------------------------------------------------------------------------
 (3) _RSI_Timer0                                           1     1      0     463
                                              6 COMRAM     1     1      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitSistema
   _initCPU

 _RSI_High (ROOT)
   _RSI_Timer0
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0      19        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      2D       5       35.2%
BITCOMRAM           7E      0       1       0        0.8%
COMRAM              7E      B      5C       1       73.0%
BITBIGSFRlhl        2B      0       0      13        0.0%
BITBIGSFRlhhhh      18      0       0       9        0.0%
BITBIGSFRh           D      0       0       8        0.0%
BITBIGSFRlhhlh       B      0       0      11        0.0%
BITBIGSFRlllh        7      0       0      16        0.0%
BITBIGSFRllhh        6      0       0      14        0.0%
BITBIGSFRlhhhl       4      0       0      10        0.0%
BITBIGSFRllhl        1      0       0      15        0.0%
BITBIGSFRlhhll       1      0       0      12        0.0%
BITBIGSFRllll        1      0       0      17        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      89      18        0.0%
DATA                 0      0      89       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon May 15 16:48:33 2023

                      _t 0050               _RSI_Timer0 0204                       l33 0384  
                     l50 037C                       l51 037C                       l56 034C  
    ___wmul@multiplicand 0053                      l931 0324                      l933 0328  
                    l935 033E                      l937 0340                      l939 034A  
                    l971 0374                      l973 0378                      wreg 0FE8  
                   _LATA 0F89                     i2l41 002C                     i2l77 02B8  
                   _main 0374                     _mask 004F                     fsr2h 0FDA  
                   fsr1l 0FE1                     fsr2l 0FD9                     btemp 005D  
                   prodh 0FF4                     prodl 0FF3                     start 0040  
           ___param_bank 0000            ??_InitSistema 005C                    ?_main 0051  
                  i2l228 0372                    _TMR0H 0FD7                    _TMR0L 0FD6  
                  _PORTB 0F81                    _TRISA 0F92                    _TRISB 0F93  
                  _TRISC 0F94          __end_of_initCPU 0386                    _filas 0049  
       __end_of_RSI_High 0040                    _zeros 0201           __pbitbssCOMRAM 02E0  
                  tablat 0FF5                    ttemp5 005E                    ttemp6 0061  
                  ttemp7 0065                    status 0FD8                    wtemp8 005E  
        __initialization 02BA             __end_of_main 0384              ?_RSI_Timer0 0051  
                 ??_main 005C            __activetblptr 0002      __end_of_InitSistema 034E  
        _teclaPresionada 004B                   _ADCON1 0FC1                   _ADCON2 0FC0  
                 _ADRESH 0FC4                   i2l1251 0228                   i2l1243 0204  
                 i2l1237 034E                   i2l1261 02A8                   i2l1253 0230  
                 i2l1245 0206                   i2l1239 036A                   i2l1247 020E  
                 i2l1265 02B0                   i2l1257 0250                   i2l1249 0212  
                 i2l1259 0280                   i2l1275 001A                   i2l1277 0028  
                 _INTCON 0FF2                   _h_Tics 0043                   ___wmul 034E  
                 _tTecla 003F                   clear_0 02E2                   _teclas 0080  
                 isa$std 0001                ??_initCPU 005C             __mediumconst 0000  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0080  __end_of__initialization 02E8            ___rparam_used 0001  
         __pcstackCOMRAM 0051             __pidataBANK0 02F6              _InitSistema 0324  
          __end_of_zeros 0203                ?_RSI_High 0051        motorTeclado@state 0047  
            _JoyPosition 004E                  ?___wmul 0051               _isCentered 02E0  
             ??_RSI_High 0058                  _INTCON3 0FF0                  i2u46_40 0228  
                i2u46_41 0224                  i2u47_40 024C                  i2u47_41 0248  
                i2u48_40 0280                  i2u48_41 027C                  i2u49_40 0028  
                i2u49_41 0024                  __Hparam 0000                  __Lparam 0000  
           ??_RSI_Timer0 0057             __psmallconst 0200                  __pcinit 02BA  
                __ramtop 0200                  __ptext0 0374                  __ptext1 0384  
                __ptext2 0324                  __ptext4 0204                  __ptext5 034E  
              _T0CONbits 0FD5                  _initCPU 0384                  _counter 0041  
                _teclado 004A     end_of_initialization 02E8       __end_of_RSI_Timer0 02BA  
          __Lmediumconst 0000               _tick_count 0045                  postdec1 0FE5  
                postdec2 0FDD                  postinc0 0FEE                  postinc2 0FDE  
             _presionada 0048          motorADCON@state 004C             ?_InitSistema 0051  
         __end_of___wmul 0374      start_initialization 02BA                 ??___wmul 0055  
            __pdataBANK0 0080              __pbssCOMRAM 0001                __pintcode 0008  
              _direction 004D                 ?_initCPU 0051              __smallconst 0200  
         ___wmul@product 0055                 _LATAbits 0F89                 _LATCbits 0F8B  
               _RCONbits 0FD0                 _RSI_High 0008               _ADCON0bits 0FC2  
      ___wmul@multiplier 0051              _INTCON2bits 0FF1                copy_data0 02CE  
               __Hrparam 0000                 __Lrparam 0000                 _s_Timers 0001  
               isa$xinst 0000                 int$flags 005D              _teclaActual 003D  
             _INTCONbits 0FF2                 intlevel2 0000  
